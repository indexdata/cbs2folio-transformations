INSERT IGNORE INTO `STEP` VALUES (10014,'XmlTransformationStep','',NULL,'pica2instance-new-pre-orchid','<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" version=\"1.0\">\r\n  <xsl:output indent=\"yes\" method=\"xml\" version=\"1.0\" encoding=\"UTF-8\"/>\r\n  <xsl:template match=\"collection\">\r\n    <collection>\r\n      <xsl:apply-templates/>\r\n    </collection>\r\n  </xsl:template>\r\n  <xsl:template match=\"record[./status=\'deleted\']\">\r\n    <record>\r\n      <delete>\r\n        <hrid>\r\n          <xsl:value-of select=\"./hrid\"/>\r\n        </hrid>\r\n      </delete>\r\n    </record>\r\n  </xsl:template>\r\n  <!-- hebis: added new templates -->\r\n  <xsl:template name=\"parse-021x\">\r\n    <xsl:if test=\"subfield[@code=\'a\']\">\r\n      <xsl:value-of select=\"translate(./subfield[@code=\'a\'], \'@\', \'\')\"/>\r\n    </xsl:if>\r\n    <xsl:if test=\"subfield[@code=\'d\']\">\r\n      <xsl:value-of select=\"concat(\' : \', ./subfield[@code=\'d\'])\"/>\r\n    </xsl:if>\r\n    <xsl:if test=\"subfield[@code=\'e\' or @code=\'h\']\">\r\n      <xsl:value-of select=\"concat(\' / \', ./subfield[@code=\'e\' or @code=\'h\'])\"/>\r\n    </xsl:if>\r\n      <xsl:if test=\"subfield[@code=\'f\']\">\r\n      <xsl:value-of select=\"concat(\' = \', ./subfield[@code=\'f\'])\"/>\r\n    </xsl:if>\r\n    <xsl:if test=\"subfield[@code=\'r\']\">\r\n      <xsl:value-of select=\".\"/>\r\n    </xsl:if>\r\n  </xsl:template>\r\n  <xsl:template name=\"parse-036x\">\r\n    <xsl:choose>\r\n      <xsl:when test=\"./subfield[@code=\'m\']\">\r\n        <xsl:value-of select=\"normalize-space(concat(\'. \', ./subfield[@code=\'m\']))\"/>\r\n        <xsl:if test=\"./subfield[@code=\'a\']\">\r\n          <xsl:value-of select=\"concat(\', \', translate(./subfield[@code=\'a\'], \'@\', \'\'))\"/>\r\n        </xsl:if>\r\n      </xsl:when>\r\n      <xsl:otherwise>\r\n        <xsl:value-of select=\"normalize-space(concat(\'. \', translate(./subfield[@code=\'a\'], \'@\', \'\')))\"/>\r\n      </xsl:otherwise>\r\n    </xsl:choose>\r\n    <xsl:if test=\"./subfield[@code=\'d\']\">\r\n      <xsl:value-of select=\"concat(\' : \', ./subfield[@code=\'d\'])\"/>\r\n    </xsl:if>\r\n    <xsl:if test=\"./subfield[@code=\'e\' or @code=\'h\']\">\r\n      <xsl:value-of select=\"concat(\' / \', ./subfield[@code=\'e\' or @code=\'h\'])\"/>\r\n    </xsl:if>\r\n    <xsl:if test=\"./subfield[@code=\'f\']\">\r\n      <xsl:value-of select=\"concat(\' = \', ./subfield[@code=\'f\'])\"/>\r\n    </xsl:if>\r\n    <xsl:if test=\"./subfield[@code=\'l\']\">\r\n      <xsl:value-of select=\"concat(\' ; \', ./subfield[@code=\'l\'])\"/>\r\n    </xsl:if>\r\n  </xsl:template>\r\n  <xsl:template match=\"record\">\r\n    <record>\r\n      <processing>\r\n        <item>\r\n          <status>\r\n            <policy>overwrite</policy>\r\n            <ifStatusWas>\r\n              <arr>\r\n                <i>\r\n                <name>On order</name>\r\n                </i>\r\n              </arr>\r\n            </ifStatusWas>\r\n          </status>\r\n        </item>\r\n      </processing>\r\n      <original>\r\n        <xsl:copy-of select=\"metadata/*\"/>\r\n      </original>\r\n      <instance>\r\n        <xsl:apply-templates select=\"metadata\"/>\r\n      </instance>\r\n    </record>\r\n  </xsl:template>\r\n  <xsl:template match=\"metadata\">\r\n    <source>K10plus</source>\r\n    <xsl:variable name=\"ppn\" select=\"datafield[@tag=\'003@\']/subfield[@code=\'0\']\"/>\r\n    <hrid>\r\n      <xsl:value-of select=\"$ppn\"/>\r\n    </hrid>\r\n    <xsl:for-each select=\"datafield[@tag=\'001D\']/subfield[@code=\'0\'][not(contains(.,\'99-99\'))]\">\r\n      <statusUpdatedDate>\r\n        <xsl:call-template name=\"pica-to-iso-date\">\r\n          <xsl:with-param name=\"input\" select=\".\"/>\r\n        </xsl:call-template>\r\n      </statusUpdatedDate>\r\n    </xsl:for-each>\r\n    <xsl:if test=\"datafield[@tag=\'002@\']\">\r\n      <!-- statusId -->\r\n      <statusId>\r\n        <xsl:variable name=\"stcode\" select=\"substring(datafield[@tag=\'002@\']/subfield[@code=\'0\'], 3, 1)\"/>\r\n        <xsl:choose>\r\n          <xsl:when test=\"$stcode=\'u\'\">Autopsie</xsl:when>\r\n          <xsl:when test=\"$stcode=\'v\'\">Bibliografisch vollständig</xsl:when>\r\n          <xsl:when test=\"$stcode=\'a\'\">Erwerbungsdatensatz</xsl:when>\r\n          <xsl:when test=\"$stcode=\'i\'\">Datensatz für internen Gebrauch</xsl:when>\r\n          <xsl:when test=\"$stcode=\'k\'\">Lösch-Status</xsl:when>\r\n          <xsl:when test=\"$stcode=\'n\'\">Maschinell konvertierte Daten</xsl:when>\r\n          <xsl:when test=\"$stcode=\'r\'\">Katalogisat ohne Autopsie</xsl:when>\r\n          <xsl:when test=\"$stcode=\'t\'\">Verwaltungsdatensatz</xsl:when>\r\n          <xsl:when test=\"$stcode=\'x\'\">Fremddatensatz</xsl:when>\r\n          <xsl:when test=\"$stcode=\'y\'\">Katalogisat nach Autopsie im Vorläufigkeitsstatus</xsl:when>\r\n          <xsl:when test=\"$stcode=\'B\'\">Maschinelle Einspielung, möglicherweise dublett</xsl:when>\r\n          <xsl:when test=\"$stcode=\'N\'\">Zunächst verdeckt eingespieltes Novum</xsl:when>\r\n          <xsl:when test=\"$stcode=\'X\'\">Inhalt oder Struktur ist zu überprüfen</xsl:when>\r\n        </xsl:choose>\r\n      </statusId>\r\n      <modeOfIssuanceId>\r\n        <xsl:variable name=\"mii\" select=\"substring(datafield[@tag=\'002@\']/subfield[@code=\'0\'], 2, 1)\"/>\r\n        <xsl:variable name=\"noc\" select=\"datafield[@tag=\'013D\']/subfield[@code=\'9\']\"/>\r\n        <xsl:choose>\r\n          <xsl:when test=\"($noc=\'106354256\' or $noc=\'32609296X\' or $noc=\'344907406\' or $noc=\'153776951\') and ($mii=\'a\' or $mii=\'f\' or $mii=\'F\' or $mii=\'s\' or $mii=\'v\')\">4fc0f4fe-06fd-490a-a078-c4da1754e03a</xsl:when>\r\n          <xsl:when test=\"$mii=\'c\'\">f5cc2ab6-bb92-4cab-b83f-5a3d09261a41</xsl:when>\r\n          <xsl:when test=\"$mii=\'b\' or $mii=\'d\'\">068b5344-e2a6-40df-9186-1829e13cd344</xsl:when>\r\n          <xsl:when test=\"$mii=\'z\'\">612bbd3d-c16b-4bfb-8517-2afafc60204a</xsl:when>\r\n          <xsl:otherwise>9d18a02f-5897-4c31-9106-c9abb5c7ae8b</xsl:otherwise>\r\n        </xsl:choose>\r\n      </modeOfIssuanceId>\r\n    </xsl:if>\r\n    <!-- Instance type ID (resource type) -->\r\n    <instanceTypeId>\r\n      <!-- UUIDs for resource types -->\r\n      <xsl:variable name=\"ctype\" select=\"datafield[@tag=\'002C\'][1]/subfield[@code=\'b\']\"/>\r\n      <xsl:choose>\r\n        <xsl:when test=\"$ctype=\'crd\'\">3363cdb1-e644-446c-82a4-dc3a1d4395b9</xsl:when>\r\n        <!-- cartographic dataset -->\r\n        <xsl:when test=\"$ctype=\'cri\'\">526aa04d-9289-4511-8866-349299592c18</xsl:when>\r\n        <!-- cartographic image -->\r\n        <xsl:when test=\"$ctype=\'crm\'\">80c0c134-0240-4b63-99d0-6ca755d5f433</xsl:when>\r\n        <!-- cartographic moving image -->\r\n        <xsl:when test=\"$ctype=\'crt\'\">408f82f0-e612-4977-96a1-02076229e312</xsl:when>\r\n        <!-- cartographic tactile image -->\r\n        <xsl:when test=\"$ctype=\'crn\'\">e5136fa2-1f19-4581-b005-6e007a940ca8</xsl:when>\r\n        <!-- cartographic tactile three-dimensional form -->\r\n        <xsl:when test=\"$ctype=\'crf\'\">2022aa2e-bdde-4dc4-90bc-115e8894b8b3</xsl:when>\r\n        <!-- cartographic three-dimensional form -->\r\n        <xsl:when test=\"$ctype=\'cod\'\">df5dddff-9c30-4507-8b82-119ff972d4d7</xsl:when>\r\n        <!-- computer dataset -->\r\n        <xsl:when test=\"$ctype=\'cop\'\">c208544b-9e28-44fa-a13c-f4093d72f798</xsl:when>\r\n        <!-- computer program -->\r\n        <xsl:when test=\"$ctype=\'ntv\'\">fbe264b5-69aa-4b7c-a230-3b53337f6440</xsl:when>\r\n        <!-- notated movement -->\r\n        <xsl:when test=\"$ctype=\'ntm\'\">497b5090-3da2-486c-b57f-de5bb3c2e26d</xsl:when>\r\n        <!-- notated music -->\r\n        <xsl:when test=\"$ctype=\'prm\'\">3be24c14-3551-4180-9292-26a786649c8b</xsl:when>\r\n        <!-- performed music -->\r\n        <xsl:when test=\"$ctype=\'snd\'\">9bce18bd-45bf-4949-8fa8-63163e4b7d7f</xsl:when>\r\n        <!-- sounds -->\r\n        <xsl:when test=\"$ctype=\'spw\'\">c7f7446f-4642-4d97-88c9-55bae2ad6c7f</xsl:when>\r\n        <!-- spoken word -->\r\n        <xsl:when test=\"$ctype=\'sti\'\">535e3160-763a-42f9-b0c0-d8ed7df6e2a2</xsl:when>\r\n        <!-- still image -->\r\n        <xsl:when test=\"$ctype=\'tci\'\">efe2e89b-0525-4535-aa9b-3ff1a131189e</xsl:when>\r\n        <!-- tactile image -->\r\n        <xsl:when test=\"$ctype=\'tcn\'\">e6a278fb-565a-4296-a7c5-8eb63d259522</xsl:when>\r\n        <!-- tactile notated movement -->\r\n        <xsl:when test=\"$ctype=\'tcm\'\">a67e00fd-dcce-42a9-9e75-fd654ec31e89</xsl:when>\r\n        <!-- tactile notated music -->\r\n        <xsl:when test=\"$ctype=\'tct\'\">8105bd44-e7bd-487e-a8f2-b804a361d92f</xsl:when>\r\n        <!-- tactile text -->\r\n        <xsl:when test=\"$ctype=\'tcf\'\">82689e16-629d-47f7-94b5-d89736cf11f2</xsl:when>\r\n        <!-- tactile three-dimensional form -->\r\n        <xsl:when test=\"$ctype=\'txt\'\">6312d172-f0cf-40f6-b27d-9fa8feaf332f</xsl:when>\r\n        <!-- text -->\r\n        <xsl:when test=\"$ctype=\'tdf\'\">c1e95c2b-4efc-48cf-9e71-edb622cf0c22</xsl:when>\r\n        <!-- three-dimensional form -->\r\n        <xsl:when test=\"$ctype=\'tdm\'\">3e3039b7-fda0-4ac4-885a-022d457cb99c</xsl:when>\r\n        <!-- three-dimensional moving image -->\r\n        <xsl:when test=\"$ctype=\'tdi\'\">225faa14-f9bf-4ecd-990d-69433c912434</xsl:when>\r\n        <!-- two-dimensional moving image -->\r\n        <xsl:when test=\"$ctype=\'zzz\'\">30fffe0e-e985-4144-b2e2-1e8179bdb41f</xsl:when>\r\n        <!-- unspecified -->\r\n        <xsl:otherwise>a2c91e87-6bab-44d6-8adb-1fd02481fc4f</xsl:otherwise>\r\n        <!--  : other -->\r\n      </xsl:choose>\r\n    </instanceTypeId>\r\n    <!-- Formats -->\r\n    <instanceFormatIds>\r\n      <arr>\r\n        <xsl:for-each select=\"datafield[@tag=\'002E\']\">\r\n          <i>\r\n            <xsl:choose>\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'sg\'\">5642320a-2ab9-475c-8ca2-4af7551cf296</xsl:when>\r\n              <!-- audio : audio cartridge -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'ss\'\">6d749f00-97bd-4eab-9828-57167558f514</xsl:when>\r\n              <!-- audio : audiocassette -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'se\'\">485e3e1d-9f46-42b6-8c65-6bb7bd4b37f8</xsl:when>\r\n              <!-- audio : audio cylinder -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'sd\'\">5cb91d15-96b1-4b8a-bf60-ec310538da66</xsl:when>\r\n              <!-- audio : audio disc -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'sq\'\">7fde4e21-00b5-4de4-a90a-08a84a601aeb</xsl:when>\r\n              <!-- audio : audio roll -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'st\'\">7612aa96-61a6-41bd-8ed2-ff1688e794e1</xsl:when>\r\n              <!-- audio : audiotape reel -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'sw\'\">6a679992-b37e-4b57-b6ea-96be6b51d2b4</xsl:when>\r\n              <!-- audio : audio wire reel -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'sz\'\">a3549b8c-3282-4a14-9ec3-c1cf294043b9</xsl:when>\r\n              <!-- audio : other -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'si\'\">5bfb7b4f-9cd5-4577-a364-f95352146a56</xsl:when>\r\n              <!-- audio : sound track reel -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'ck\'\">549e3381-7d49-44f6-8232-37af1cb5ecf3</xsl:when>\r\n              <!-- computer : computer card -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'cb\'\">88f58dc0-4243-4c6b-8321-70244ff34a83</xsl:when>\r\n              <!-- computer : computer chip cartridge -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'cd\'\">ac9de2b9-0914-4a54-8805-463686a5489e</xsl:when>\r\n              <!-- computer : computer disc -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'ce\'\">e05f2613-05df-4b4d-9292-2ee9aa778ecc</xsl:when>\r\n              <!-- computer : computer disc cartridge -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'ca\'\">f4f30334-568b-4dd2-88b5-db8401607daf</xsl:when>\r\n              <!-- computer : computer tape cartridge -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'cf\'\">e5aeb29a-cf0a-4d97-8c39-7756c10d423c</xsl:when>\r\n              <!-- computer : computer tape cassette -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'ch\'\">d16b19d1-507f-4a22-bb8a-b3f713a73221</xsl:when>\r\n              <!-- computer : computer tape reel -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'cr\'\">f5e8210f-7640-459b-a71f-552567f92369</xsl:when>\r\n              <!-- computer : online resource -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'cz\'\">fe1b9adb-e0cf-4e05-905f-ce9986279404</xsl:when>\r\n              <!-- computer : other -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'ha\'\">cb3004a3-2a85-4ed4-8084-409f93d6d8ba</xsl:when>\r\n              <!-- microform : aperture card -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'he\'\">fc3e32a0-9c85-4454-a42e-39fca788a7dc</xsl:when>\r\n              <!-- microform : microfiche -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'hf\'\">b72e66e2-d946-4b01-a696-8fab07051ff8</xsl:when>\r\n              <!-- microform : microfiche cassette -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'hb\'\">fc9bfed9-2cb0-465f-8758-33af5bba750b</xsl:when>\r\n              <!-- microform : microfilm cartridge -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'hc\'\">b71e5ec6-a15d-4261-baf9-aea6be7af15b</xsl:when>\r\n              <!-- microform : microfilm cassette -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'hd\'\">7bfe7e83-d4aa-46d1-b2a9-f612b18d11f4</xsl:when>\r\n              <!-- microform : microfilm reel -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'hj\'\">cb96199a-21fb-4f11-b003-99291d8c9752</xsl:when>\r\n              <!-- microform : microfilm roll -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'hh\'\">33009ba2-b742-4aab-b592-68b27451e94f</xsl:when>\r\n              <!-- microform : microfilm slip -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'hg\'\">788aa9a6-5f0b-4c52-957b-998266ee3bd3</xsl:when>\r\n              <!-- microform : microopaque -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'hz\'\">a0f2612b-f24f-4dc8-a139-89c3da5a38f1</xsl:when>\r\n              <!-- microform : other -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'pp\'\">b1c69d78-4afb-4d8b-9624-8b3cfa5288ad</xsl:when>\r\n              <!-- microscopic : microscope slide -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'pz\'\">55d3b8aa-304e-4967-8b78-55926d7809ac</xsl:when>\r\n              <!-- microscopic : other -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'mc\'\">6bf2154b-df6e-4f11-97d0-6541231ac2be</xsl:when>\r\n              <!-- projected image : film cartridge -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'mf\'\">47b226c0-853c-40f4-ba2e-2bd5ba82b665</xsl:when>\r\n              <!-- projected image : film cassette -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'mr\'\">55a66581-3921-4b50-9981-4fe53bf35e7f</xsl:when>\r\n              <!-- projected image : film reel -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'mo\'\">f0e689e8-e62d-4aac-b1c1-198ac9114aca</xsl:when>\r\n              <!-- projected image : film roll -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'gd\'\">53f44ae4-167b-4cc2-9a63-4375c0ad9f58</xsl:when>\r\n              <!-- projected image : filmslip -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'gf\'\">8e04d356-2645-4f97-8de8-9721cf11ccef</xsl:when>\r\n              <!-- projected image : filmstrip -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'gc\'\">f7107ab3-9c09-4bcb-a637-368f39e0b140</xsl:when>\r\n              <!-- projected image : filmstrip cartridge -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'mz\'\">9166e7c9-7edb-4180-b57e-e495f551297f</xsl:when>\r\n              <!-- projected image : other -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'gt\'\">eb860cea-b842-4a8b-ab8d-0739856f0c2c</xsl:when>\r\n              <!-- projected image : overhead transparency -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'gs\'\">b2b39d2f-856b-4419-93d3-ed1851f91b9f</xsl:when>\r\n              <!-- projected image : slide -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'ez\'\">7c9b361d-66b6-4e4c-ae4b-2c01f655612c</xsl:when>\r\n              <!-- stereographic : other -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'eh\'\">e62f4860-b3b0-462e-92b6-e032336ab663</xsl:when>\r\n              <!-- stereographic : stereograph card -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'es\'\">c3f41d5e-e192-4828-805c-6df3270c1910</xsl:when>\r\n              <!-- stereographic : stereograph disc -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'no\'\">5fa3e09f-2192-41a9-b4bf-9eb8aef0af0a</xsl:when>\r\n              <!-- unmediated : card -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'nn\'\">affd5809-2897-42ca-b958-b311f3e0dcfb</xsl:when>\r\n              <!-- unmediated : flipchart -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'nr\'\">926662e9-2486-4bb9-ba3b-59bd2e7f2a0c</xsl:when>\r\n              <!-- unmediated : object -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'nz\'\">2802b285-9f27-4c86-a9d7-d2ac08b26a79</xsl:when>\r\n              <!-- unmediated : other -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'na\'\">68e7e339-f35c-4be2-b161-0b94d7569b7b</xsl:when>\r\n              <!-- unmediated : roll -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'nb\'\">5913bb96-e881-4087-9e71-33a43f68e12e</xsl:when>\r\n              <!-- unmediated : sheet -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'nc\'\">8d511d33-5e85-4c5d-9bce-6e3c9cd0c324</xsl:when>\r\n              <!-- unmediated : volume -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'zu\'\">98f0caa9-d38e-427b-9ec4-454de81a94d7</xsl:when>\r\n              <!-- unspecified : unspecified -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'vz\'\">e3179f91-3032-43ee-be97-f0464f359d9c</xsl:when>\r\n              <!-- video : other -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'vc\'\">132d70db-53b3-4999-bd79-0fac3b8b9b98</xsl:when>\r\n              <!-- video : video cartridge -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'vf\'\">431cc9a0-4572-4613-b267-befb0f3d457f</xsl:when>\r\n              <!-- video : videocassette -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'vd\'\">7f857834-b2e2-48b1-8528-6a1fe89bf979</xsl:when>\r\n              <!-- video : videodisc -->\r\n              <xsl:when test=\"./subfield[@code=\'b\']=\'vr\'\">ba0d7429-7ccf-419d-8bfb-e6a1200a8d20</xsl:when>\r\n              <!-- video : videotape reel -->\r\n            </xsl:choose>\r\n          </i>\r\n        </xsl:for-each>\r\n      </arr>\r\n    </instanceFormatIds>\r\n    <!-- Identifiers -->\r\n    <identifiers>\r\n      <arr>\r\n        <xsl:for-each select=\"datafield[@tag=\'003S\' or @tag=\'003@\' or @tag=\'004A\' or @tag=\'004P\' or @tag=\'004J\' or @tag=\'004K\' or @tag=\'004D\' or @tag=\'005A\' or @tag=\'005I\' or @tag=\'005P\' or @tag=\'005B\' or @tag=\'004F\' or @tag=\'004M\' or @tag=\'004I\' or @tag=\'006A\' or @tag=\'006B\' or @tag=\'006G\' or @tag=\'006T\' or @tag=\'006U\' or @tag=\'006Z\' or @tag=\'006S\' or @tag=\'006L\' or @tag=\'006\' or @tag=\'006V\' or @tag=\'006W\' or @tag=\'006M\' or @tag=\'004V\' or @tag=\'004R\' or @tag=\'004W\' or @tag=\'004L\' or @tag=\'004C\' or @tag=\'004U\' or @tag=\'003O\' or @tag=\'003T\' or @tag=\'003D\' or @tag=\'007C\' or @tag=\'007D\' or @tag=\'007G\' or @tag=\'017L\']\">\r\n          <xsl:choose>\r\n            <xsl:when test=\"./@tag=\'004A\' or @tag=\'004D\' or @tag=\'004P\' or @tag=\'005A\' or @tag=\'005P\' or @tag=\'005B\' or @tag=\'004F\' or @tag=\'004M\' or @tag=\'004I\'\">\r\n              <xsl:variable name=\"id-value\">\r\n                <xsl:choose>\r\n                  <xsl:when test=\"./subfield[@code=\'f\'] and ./subfield[@code=\'0\']\">\r\n                    <xsl:value-of select=\"concat(./subfield[@code=\'0\'],\' \',./subfield[@code=\'f\'])\"/>\r\n                  </xsl:when>\r\n                  <xsl:when test=\"./subfield[@code=\'f\']\">\r\n                    <xsl:value-of select=\"./subfield[@code=\'f\']\"/>\r\n                  </xsl:when>\r\n                  <xsl:otherwise>\r\n                    <xsl:value-of select=\"./subfield[@code=\'0\']\"/>\r\n                  </xsl:otherwise>\r\n                </xsl:choose>\r\n              </xsl:variable>\r\n              <xsl:variable name=\"id-type\">\r\n                <xsl:choose>\r\n                  <xsl:when test=\"./@tag=\'004A\'\">ISBN</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'004P\' and ./subfield[@code=\'S\']=\'a\'\">ISBN der parallelen Ausgabe auf einem anderen Datenträger</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'004P\' and ./subfield[@code=\'S\']=\'o\'\">ISBN der parallelen Ausgabe im Fernzugriff</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'004P\' and ./subfield[@code=\'S\']=\'p\'\">ISBN der parallelen Druckausgabe</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'004P\' and ./subfield[@code=\'S\']=\'u\'\">ISBN für parallele Ausgabe in einer anderen physischen Form</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'004P\'\">ISBN einer Manifestation in anderer physischer Form</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'005A\'\">ISSN</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'005B\'\">Invalid ISSN</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'005P\' and ./subfield[@code=\'S\']=\'a\'\">ISSN für parallele Ausgaben auf einem anderen Datenträger</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'005P\' and ./subfield[@code=\'S\']=\'o\'\">ISSN für parallele Ausgaben im Fernzugriff</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'005P\' and ./subfield[@code=\'S\']=\'p\'\">ISSN für parallele Druckausgaben</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'005P\' and ./subfield[@code=\'S\']=\'f\'\">Fehlerhafte ISSN der parallelen Ausgabe</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'005P\'\">ISSN paralleler Ausgaben</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'004D\'\">Invalid ISBN</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'004F\'\">ISMN</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'004M\'\">ISRN</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'004I\'\">Formal falsche ISMN</xsl:when>\r\n                </xsl:choose>\r\n              </xsl:variable>\r\n              <xsl:if test=\"string-length($id-value) &gt; 0\">\r\n                <i>\r\n                  <value>\r\n                    <xsl:value-of select=\"$id-value\"/>\r\n                  </value>\r\n                  <identifierTypeId>\r\n                    <xsl:value-of select=\"$id-type\"/>\r\n                  </identifierTypeId>\r\n                </i>\r\n              </xsl:if>\r\n            </xsl:when>\r\n            <xsl:when test=\"./@tag=\'007G\' or @tag=\'007D\'\">\r\n              <xsl:variable name=\"id-value\">\r\n                <xsl:choose>\r\n                  <xsl:when test=\"./subfield[@code=\'0\']\">\r\n                    <xsl:value-of select=\"concat(./subfield[@code=\'i\'],\': \',./subfield[@code=\'0\'])\"/>\r\n                  </xsl:when>\r\n                  <xsl:otherwise>\r\n                    <xsl:value-of select=\"./subfield[@code=\'i\']\"/>\r\n                  </xsl:otherwise>\r\n                </xsl:choose>\r\n              </xsl:variable>\r\n              <xsl:variable name=\"id-type\">\r\n                <xsl:choose>\r\n                  <xsl:when test=\"./@tag=\'007G\'\">Identnummer der erstkatalogisierenden Institution</xsl:when>\r\n                </xsl:choose>\r\n              </xsl:variable>\r\n              <xsl:if test=\"string-length($id-value) &gt; 0\">\r\n                <i>\r\n                  <value>\r\n                    <xsl:value-of select=\"$id-value\"/>\r\n                  </value>\r\n                  <identifierTypeId>\r\n                    <xsl:value-of select=\"$id-type\"/>\r\n                  </identifierTypeId>\r\n                </i>\r\n              </xsl:if>\r\n            </xsl:when>\r\n            <xsl:when test=\"./@tag=\'017L\'\">\r\n              <xsl:variable name=\"id-value\">\r\n                <xsl:call-template name=\"join\">\r\n                  <xsl:with-param name=\"list\" select=\"./subfield[@code=\'a\' or @code=\'b\' or @code=\'c\' or @code=\'d\']\"/>\r\n                  <xsl:with-param name=\"separator\" select=\"\' \'\"/>\r\n                </xsl:call-template>\r\n              </xsl:variable>\r\n              <xsl:variable name=\"id-type\">\r\n                <xsl:choose>\r\n                  <xsl:when test=\"./@tag=\'017L\'\">Produktsigel Teilpaket, Arbeitsfeld für sonstige Produktsigel</xsl:when>\r\n                  <xsl:otherwise/>\r\n                </xsl:choose>\r\n              </xsl:variable>\r\n              <xsl:if test=\"string-length($id-value) &gt; 0\">\r\n                <i>\r\n                  <value>\r\n                    <xsl:value-of select=\"$id-value\"/>\r\n                  </value>\r\n                  <identifierTypeId>\r\n                    <xsl:value-of select=\"$id-type\"/>\r\n                  </identifierTypeId>\r\n                </i>\r\n              </xsl:if>\r\n            </xsl:when>\r\n            <xsl:when test=\"./subfield[@code=\'0\']\">\r\n              <xsl:variable name=\"id-value\">\r\n                <xsl:value-of select=\"./subfield[@code=\'0\']\"/>\r\n              </xsl:variable>\r\n              <xsl:variable name=\"id-type\">\r\n                <xsl:choose>\r\n                  <xsl:when test=\"./@tag=\'003O\'\">OCLC</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'003S\'\">PPN SWB</xsl:when>\r\n				  <xsl:when test=\"./@tag=\'003@\'\">PPN</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'004J\'\">ISBN der Reproduktion</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'004K\'\">Formal falsche ISBN der Reproduktion</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'005I\'\">Autorisierte ISSN</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'006A\'\">LCCN</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'006G\'\">DNB-Nummer</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'004W\'\">Digital Object Identifier (DOI) im Druckwerk</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'003T\'\">SWB-OCLC-Nummer</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'006T\'\">CIP-Nummer</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'006U\'\">WV-Nummer</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'006Z\'\">ZDB-Nummer</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'006S\'\">SWB-PPN des umgelenkten Satzes</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'006L\'\">Weitere Verbundidentnummern</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'006X\'\">Identnummern weiterer Fremddatenlieferanten</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'003D\'\">PPN des umgelenkten GBV- bzw. K10plus-Satzes</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'006N\'\">Swets-Nummer</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'006V\'\">VD16-Nummer</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'006W\'\">VD17-Nummer</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'006M\'\">VD18-Nummer</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'007Y\'\">Sonstige Standardnummern</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'006Y\'\">Identnummern (allgemein)</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'007C\'\">CODEN</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'004L\'\">GTIN (vormals EAN)</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'004C\'\">Universal Product Code (UPC)</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'007D\'\">Verlags-, Produktions- und Bestellnummer</xsl:when>\r\n                </xsl:choose>\r\n              </xsl:variable>\r\n              <xsl:if test=\"string-length($id-value) &gt; 0\">\r\n                <i>\r\n                  <value>\r\n                    <xsl:value-of select=\"$id-value\"/>\r\n                  </value>\r\n                  <identifierTypeId>\r\n                    <xsl:value-of select=\"$id-type\"/>\r\n                  </identifierTypeId>\r\n                </i>\r\n              </xsl:if>\r\n            </xsl:when>\r\n          </xsl:choose>\r\n        </xsl:for-each>\r\n      </arr>\r\n    </identifiers>\r\n\r\n    <!-- hebis: \r\n       - added missing tags and subfields (parts of multipart resources with dependent title, \"contained works\")\r\n       - corrected order of tags and subfields, e.g. remainder of title and statement of responsibility of titles with subsets\r\n       - separated transcription and Non Latin script\r\n    -->\r\n\r\n    <!-- title -->\r\n\r\n          <!-- hebis: special feature at hebis, 036A/XY doesn\'t exist at GBV -->\r\n          <xsl:variable name=\"title-036A\">\r\n            <xsl:for-each select=\"datafield[(@tag=\'036A\') and (not(./subfield[@code=\'U\']) or (substring(./subfield[@code=\'U\'],1,4) = \'Latn\'))]\">\r\n              <xsl:call-template name=\"parse-036x\"/>\r\n            </xsl:for-each>\r\n          </xsl:variable>\r\n\r\n          <xsl:variable name=\"title-036C\">\r\n            <xsl:for-each select=\"datafield[(@tag=\'036C\') and (not(./subfield[@code=\'U\']) or (substring(./subfield[@code=\'U\'],1,4) = \'Latn\'))]\">\r\n              <xsl:call-template name=\"parse-036x\"/>\r\n            </xsl:for-each>\r\n          </xsl:variable>\r\n\r\n          <xsl:variable name=\"title-036C-ori\">\r\n            <xsl:for-each select=\"datafield[(@tag=\'036C\') and (substring(./subfield[@code=\'U\'],1,4) != \'Latn\') and (./subfield[@code=\'U\'])]\">\r\n              <xsl:call-template name=\"parse-036x\"/>\r\n            </xsl:for-each>\r\n          </xsl:variable>\r\n\r\n          <xsl:variable name=\"title-036C-idx\">\r\n            <xsl:for-each select=\"datafield[(@tag=\'036C\') and (not(./subfield[@code=\'U\']) or (substring(./subfield[@code=\'U\'],1,4) = \'Latn\'))]\">\r\n              <xsl:if test=\"./subfield[@code=\'m\']\">\r\n                <xsl:value-of select=\"concat(\' \', ./subfield[@code=\'m\'])\"/>\r\n              </xsl:if>\r\n              <xsl:if test=\"subfield[@code=\'a\']\">\r\n                <xsl:choose>\r\n                  <xsl:when test=\"./subfield[@code=\'a\'][contains(., \'@\')]\">\r\n                    <xsl:value-of select=\"concat(\' \', substring-after(./subfield[@code=\'a\'], \'@\'))\"/>\r\n                  </xsl:when>\r\n                  <xsl:otherwise>\r\n                    <xsl:value-of select=\"concat(\' \', ./subfield[@code=\'a\'])\"/>\r\n                  </xsl:otherwise>\r\n                </xsl:choose>\r\n              </xsl:if>\r\n              <xsl:if test=\"subfield[@code=\'d\']\">\r\n                <xsl:value-of select=\"concat(\' \', ./subfield[@code=\'d\'])\"/>\r\n              </xsl:if>\r\n              <xsl:if test=\"subfield[@code=\'e\' or @code=\'h\']\">\r\n                <xsl:value-of select=\"concat(\' \', ./subfield[@code=\'e\' or @code=\'h\'])\"/>\r\n              </xsl:if>\r\n              <xsl:if test=\"subfield[@code=\'f\']\">\r\n                <xsl:value-of select=\"concat(\' \', ./subfield[@code=\'f\'])\"/>\r\n              </xsl:if>\r\n              <xsl:if test=\"subfield[@code=\'l\']\">\r\n                <xsl:value-of select=\"concat(\' \', ./subfield[@code=\'l\'])\"/>\r\n              </xsl:if>\r\n            </xsl:for-each>\r\n          </xsl:variable>\r\n\r\n          <xsl:variable name=\"title-021A\">\r\n            <xsl:for-each select=\"datafield[(@tag=\'021A\') and ((substring(./subfield[@code=\'U\'],1,4) = \'Latn\') or not(./subfield[@code=\'U\']))]\">\r\n              <xsl:call-template name=\"parse-021x\"/>\r\n            </xsl:for-each>\r\n          </xsl:variable>\r\n\r\n          <xsl:variable name=\"title-021A-ori\">\r\n            <xsl:for-each select=\"datafield[(@tag=\'021A\') and (substring(./subfield[@code=\'U\'],1,4) != \'Latn\') and (./subfield[@code=\'U\'])]\">\r\n              <xsl:call-template name=\"parse-021x\"/>\r\n            </xsl:for-each>\r\n          </xsl:variable>\r\n\r\n          <xsl:variable name=\"title-021A-idx\">\r\n            <xsl:for-each select=\"datafield[(@tag=\'021A\') and ((substring(./subfield[@code=\'U\'],1,4) = \'Latn\') or not(./subfield[@code=\'U\']))]\">\r\n              <xsl:if test=\"subfield[@code=\'a\']\">\r\n                <xsl:choose>\r\n                  <xsl:when test=\"./subfield[@code=\'a\'][contains(., \'@\')]\">\r\n                    <xsl:value-of select=\"substring-after(./subfield[@code=\'a\'], \'@\')\"/>\r\n                  </xsl:when>\r\n                  <xsl:otherwise>\r\n                    <xsl:value-of select=\"./subfield[@code=\'a\']\"/>\r\n                  </xsl:otherwise>\r\n                </xsl:choose>\r\n              </xsl:if>\r\n              <xsl:if test=\"subfield[@code=\'d\']\">\r\n                <xsl:value-of select=\"concat(\' \', ./subfield[@code=\'d\'])\"/>\r\n              </xsl:if>\r\n              <xsl:if test=\"subfield[@code=\'e\' or @code=\'h\']\">\r\n                <xsl:value-of select=\"concat(\' \', ./subfield[@code=\'e\' or @code=\'h\'])\"/>\r\n              </xsl:if>\r\n              <xsl:if test=\"subfield[@code=\'f\']\">\r\n                <xsl:value-of select=\"concat(\' \', ./subfield[@code=\'f\'])\"/>\r\n              </xsl:if>\r\n              <xsl:if test=\"subfield[@code=\'r\']\">\r\n                <xsl:value-of select=\"./subfield[@code=\'r\']\"/>\r\n              </xsl:if>\r\n            </xsl:for-each>\r\n          </xsl:variable>\r\n\r\n          <xsl:variable name=\"title-021C\">\r\n            <xsl:for-each select=\"datafield[(@tag=\'021C\') and ((substring(./subfield[@code=\'U\'],1,4) = \'Latn\') or not(./subfield[@code=\'U\']))]\">\r\n              <xsl:choose>\r\n                <xsl:when test=\"./subfield[@code=\'l\']\">\r\n                  <xsl:value-of select=\"normalize-space(concat(\'. \', ./subfield[@code=\'l\']))\"/>\r\n                  <xsl:if test=\"subfield[@code=\'a\']\">\r\n                     <xsl:value-of select=\"concat(\', \', translate(./subfield[@code=\'a\'], \'@\', \'\'))\"/>\r\n                  </xsl:if>\r\n                </xsl:when>\r\n                <xsl:otherwise>\r\n                  <xsl:value-of select=\"normalize-space(concat(\'. \', translate(./subfield[@code=\'a\'], \'@\', \'\')))\"/>\r\n                </xsl:otherwise>\r\n              </xsl:choose>\r\n            </xsl:for-each>\r\n          </xsl:variable>\r\n\r\n          <xsl:variable name=\"title-021C-ori\">\r\n            <xsl:for-each select=\"datafield[@tag=\'021C\']\">\r\n              <xsl:if test=\"(substring(./subfield[@code=\'U\'],1,4) != \'Latn\') and (./subfield[@code=\'U\']) \">\r\n                <xsl:choose>\r\n                  <xsl:when test=\"./subfield[@code=\'l\']\">\r\n                    <xsl:value-of select=\"normalize-space(concat(\'. \', ./subfield[@code=\'l\']))\"/>\r\n                    <xsl:if test=\"subfield[@code=\'a\']\">\r\n                       <xsl:value-of select=\"concat(\', \', translate(./subfield[@code=\'a\'], \'@\', \'\'))\"/>\r\n                    </xsl:if>\r\n                  </xsl:when>\r\n                  <xsl:otherwise>\r\n                    <xsl:value-of select=\"normalize-space(concat(\'. \', translate(./subfield[@code=\'a\'], \'@\', \'\')))\"/>\r\n                  </xsl:otherwise>\r\n                </xsl:choose>\r\n              </xsl:if>\r\n            </xsl:for-each>\r\n          </xsl:variable>\r\n\r\n          <xsl:variable name=\"title-021C-idx\">\r\n            <xsl:for-each select=\"datafield[(@tag=\'021C\') and ((substring(./subfield[@code=\'U\'],1,4) = \'Latn\') or not(./subfield[@code=\'U\']))]\">\r\n              <xsl:if test=\"./subfield[@code=\'l\']\">\r\n                <xsl:value-of select=\"concat(\' \', ./subfield[@code=\'l\'])\"/>\r\n              </xsl:if>\r\n              <xsl:if test=\"subfield[@code=\'a\']\">\r\n                <xsl:choose>\r\n                  <xsl:when test=\"./subfield[@code=\'a\'][contains(., \'@\')]\">\r\n                    <xsl:value-of select=\"concat(\' \',substring-after(./subfield[@code=\'a\'], \'@\'))\"/>\r\n                  </xsl:when>\r\n                  <xsl:otherwise>\r\n                    <xsl:value-of select=\"concat(\' \', ./subfield[@code=\'a\'])\"/>\r\n                  </xsl:otherwise>\r\n                </xsl:choose>\r\n              </xsl:if>\r\n            </xsl:for-each>\r\n          </xsl:variable>\r\n\r\n          <xsl:variable name=\"title-021M\">\r\n            <xsl:for-each select=\"datafield[(@tag=\'021M\') and ((substring(./subfield[@code=\'U\'],1,4) = \'Latn\') or not(./subfield[@code=\'U\']))]\">\r\n                <xsl:value-of select=\"\' | \'\"/>\r\n              <xsl:call-template name=\"parse-021x\"/>\r\n            </xsl:for-each>\r\n          </xsl:variable>\r\n\r\n          <xsl:variable name=\"title-021M-ori\">\r\n            <xsl:for-each select=\"datafield[(@tag=\'021M\') and (substring(./subfield[@code=\'U\'],1,4) != \'Latn\') and (./subfield[@code=\'U\'])]\">\r\n                <xsl:value-of select=\"\' | \'\"/>\r\n              <xsl:call-template name=\"parse-021x\"/>\r\n            </xsl:for-each>\r\n          </xsl:variable>\r\n\r\n          <xsl:variable name=\"title-021M-idx\">\r\n            <xsl:for-each select=\"datafield[(@tag=\'021M\') and ((substring(./subfield[@code=\'U\'],1,4) = \'Latn\') or not(./subfield[@code=\'U\']))]\">\r\n              <xsl:value-of select=\"\' \'\"/>\r\n              <xsl:if test=\"subfield[@code=\'a\']\">\r\n                <xsl:choose>\r\n                  <xsl:when test=\"./subfield[@code=\'a\'][contains(., \'@\')]\">\r\n                    <xsl:value-of select=\"substring-after(./subfield[@code=\'a\'], \'@\')\"/>\r\n                  </xsl:when>\r\n                  <xsl:otherwise>\r\n                    <xsl:value-of select=\"./subfield[@code=\'a\']\"/>\r\n                  </xsl:otherwise>\r\n                </xsl:choose>\r\n              </xsl:if>\r\n              <xsl:if test=\"subfield[@code=\'d\']\">\r\n                <xsl:value-of select=\"concat(\' \', ./subfield[@code=\'d\'])\"/>\r\n              </xsl:if>\r\n              <xsl:if test=\"subfield[@code=\'e\' or @code=\'h\']\">\r\n                <xsl:value-of select=\"concat(\' \', ./subfield[@code=\'e\' or @code=\'h\'])\"/>\r\n              </xsl:if>\r\n              <xsl:if test=\"subfield[@code=\'f\']\">\r\n                <xsl:value-of select=\"concat(\' \', ./subfield[@code=\'f\'])\"/>\r\n              </xsl:if>\r\n            </xsl:for-each>\r\n          </xsl:variable>\r\n\r\n          <xsl:variable name=\"title-021N\">\r\n            <xsl:for-each select=\"datafield[(@tag=\'021N\') and ((substring(./subfield[@code=\'U\'],1,4) = \'Latn\') or not(./subfield[@code=\'U\']))]\">\r\n              <xsl:if test=\"subfield[@code=\'a\']\">\r\n                <xsl:value-of select=\"subfield[@code=\'a\']\"/>\r\n              </xsl:if>\r\n            </xsl:for-each>\r\n          </xsl:variable>\r\n\r\n          <xsl:variable name=\"title-021N-ori\">\r\n            <xsl:for-each select=\"datafield[(@tag=\'021N\') and ((substring(./subfield[@code=\'U\'],1,4) != \'Latn\') or not(./subfield[@code=\'U\']))]\">\r\n              <xsl:if test=\"subfield[@code=\'a\']\">\r\n                <xsl:value-of select=\"subfield[@code=\'a\']\"/>\r\n              </xsl:if>\r\n            </xsl:for-each>\r\n          </xsl:variable>\r\n\r\n          <title>\r\n            <xsl:choose>\r\n              <xsl:when test=\"boolean(substring(datafield[@tag=\'002@\']/subfield[@code=\'0\'], 2, 1) = \'f\') and datafield[@tag=\'036C\']\">\r\n                <xsl:value-of select=\"normalize-space(substring-after($title-036C, \'. \'))\"/>\r\n                  <xsl:if test=\"$title-021A != \'\' and boolean(substring($title-021A, 1, 1) != \' \')\">\r\n                    <xsl:choose>\r\n                      <!-- hebis: TBD: Not entirely correct, but it should work in most cases. \r\n                                       The last occurrence of 036C would have to be evaluated. -->\r\n                      <xsl:when test=\"datafield[@tag=\'036C\']/subfield[@code=\'l\']\">\r\n                        <xsl:value-of select=\"concat(\', \', $title-021A)\"/>\r\n                      </xsl:when>\r\n                      <xsl:otherwise>\r\n                        <xsl:value-of select=\"concat(\' ; \', $title-021A)\"/>\r\n                      </xsl:otherwise>\r\n                    </xsl:choose>\r\n                  </xsl:if>\r\n                  <xsl:if test=\"$title-021A != \'\' and boolean(substring($title-021A, 1, 1) = \' \')\">\r\n                    <xsl:value-of select=\"$title-021A\"/>\r\n                  </xsl:if>\r\n              </xsl:when> \r\n              <!-- TBD: need for adjustment at GBV\r\n              <xsl:when test=\"boolean(substring(datafield[@tag=\'002@\']/subfield[@code=\'0\'], 2, 1) = \'f\') and datafield[@tag=\'036E\']\">036E</xsl:when>\r\n              <xsl:when test=\"boolean(substring(datafield[@tag=\'002@\']/subfield[@code=\'0\'], 2, 1) = \'v\') and datafield[@tag=\'036F\']/subfield[@code=\'8\']\">036F</xsl:when> \r\n              -->\r\n              <xsl:otherwise>\r\n                <xsl:value-of select=\"concat($title-021A, $title-021C)\"/>\r\n                  <!-- hebis: ZDB special feature since the RDA switch:\r\n                              Edition Statement instead of subseries -->\r\n                  <xsl:if test=\"boolean(substring(datafield[@tag=\'002@\']/subfield[@code=\'0\'], 2, 1) = \'b\') or boolean(substring(datafield[@tag=\'002@\']/subfield[@code=\'0\'], 2, 1) = \'d\')\">\r\n                    <xsl:if test=\"datafield[@tag=\'032@\']/subfield[@code=\'a\'] != \'\'\">\r\n                      <xsl:value-of select=\"concat(\'. \', datafield[@tag=\'032@\']/subfield[@code=\'a\'])\"/>\r\n                    </xsl:if>\r\n                  </xsl:if>\r\n                  <xsl:if test=\"$title-021M != \'\'\">\r\n                    <xsl:value-of select=\"$title-021M\"/>\r\n                  </xsl:if>\r\n                  <xsl:if test=\"$title-021N != \'\'\">\r\n                    <xsl:choose>\r\n                      <xsl:when test=\"boolean(substring($title-021N, 1, 1) = \'/\')\">\r\n                        <xsl:value-of select=\"concat(\' \', $title-021N)\"/>\r\n                      </xsl:when>\r\n                      <xsl:otherwise>\r\n                        <xsl:value-of select=\"concat(\' | \', $title-021N)\"/>\r\n                      </xsl:otherwise>\r\n                    </xsl:choose>\r\n                  </xsl:if>\r\n              </xsl:otherwise>\r\n            </xsl:choose>\r\n          </title> \r\n\r\n          <indexTitle>\r\n            <xsl:choose>\r\n              <xsl:when test=\"boolean(substring(datafield[@tag=\'002@\']/subfield[@code=\'0\'], 2, 1) = \'f\') and datafield[@tag=\'036C\']\">\r\n                <xsl:value-of select=\"normalize-space(translate($title-036C-idx, \'&#034;&#035;&#040;&#041;&#046;\', \' \'))\"/>\r\n                  <xsl:if test=\"$title-021A-idx != \'\'\">\r\n                    <xsl:value-of select=\"concat(\' \', $title-021A-idx)\"/>\r\n                  </xsl:if>\r\n              </xsl:when>\r\n              <!-- TBD: need for adjustment at GBV\r\n              <xsl:when test=\"boolean(substring(datafield[@tag=\'002@\']/subfield[@code=\'0\'], 2, 1) = \'f\') and datafield[@tag=\'036E\']\">036E</xsl:when>\r\n              <xsl:when test=\"boolean(substring(datafield[@tag=\'002@\']/subfield[@code=\'0\'], 2, 1) = \'v\') and datafield[@tag=\'036F\']/subfield[@code=\'8\']\">036F</xsl:when> \r\n              -->\r\n              <xsl:otherwise>\r\n                <xsl:value-of select=\"concat(translate($title-021A-idx, \'&#034;&#035;&#040;&#041;&#046;\', \' \'), $title-021C-idx)\"/>\r\n                  <!-- hebis: ZDB special feature since the RDA switch:\r\n                              Edition Statement instead of subseries -->\r\n                  <xsl:if test=\"boolean(substring(datafield[@tag=\'002@\']/subfield[@code=\'0\'], 2, 1) = \'b\') or boolean(substring(datafield[@tag=\'002@\']/subfield[@code=\'0\'], 2, 1) = \'d\')\">\r\n                    <xsl:if test=\"datafield[@tag=\'032@\']/subfield[@code=\'a\'] != \'\'\">\r\n                      <xsl:value-of select=\"concat(\'. \', datafield[@tag=\'032@\']/subfield[@code=\'a\'])\"/>\r\n                    </xsl:if>\r\n                  </xsl:if>\r\n                  <xsl:if test=\"$title-021M-idx != \'\'\">\r\n                    <xsl:value-of select=\"$title-021M-idx\"/>\r\n                  </xsl:if>\r\n                  <xsl:if test=\"$title-021N != \'\'\">\r\n                    <xsl:choose>\r\n                      <xsl:when test=\"boolean(substring($title-021N, 1, 1) = \'/\')\">\r\n                        <xsl:value-of select=\"concat(\' \', $title-021N)\"/>\r\n                      </xsl:when>\r\n                      <xsl:otherwise>\r\n                        <xsl:value-of select=\"concat(\' \', $title-021N)\"/>\r\n                      </xsl:otherwise>\r\n                    </xsl:choose>\r\n                  </xsl:if>\r\n              </xsl:otherwise>\r\n            </xsl:choose>\r\n          </indexTitle>\r\n\r\n\r\n<!-- Original Code\r\n    <xsl:variable name=\"title-tag\">\r\n      <xsl:choose>\r\n        <xsl:when test=\"boolean(substring(datafield[@tag=\'002@\']/subfield[@code=\'0\'], 2, 1) = \'f\') and datafield[@tag=\'036C\']\">036C</xsl:when>\r\n        <xsl:when test=\"boolean(substring(datafield[@tag=\'002@\']/subfield[@code=\'0\'], 2, 1) = \'f\') and datafield[@tag=\'036E\']\">036E</xsl:when>\r\n        <xsl:when test=\"boolean(substring(datafield[@tag=\'002@\']/subfield[@code=\'0\'], 2, 1) = \'v\') and datafield[@tag=\'036F\']/subfield[@code=\'8\']\">036F</xsl:when>\r\n        <xsl:otherwise>021A</xsl:otherwise>\r\n      </xsl:choose>\r\n    </xsl:variable>\r\n    <xsl:choose>\r\n      <xsl:when test=\"datafield[@tag=$title-tag][1]\">\r\n        <xsl:for-each select=\"datafield[@tag=$title-tag][1]\">\r\n          <xsl:variable name=\"title-a\" select=\"translate(./subfield[@code=\'a\'], \'@\', \'\')\"/>\r\n          <xsl:variable name=\"title-d\" select=\"./subfield[@code=\'d\']\"/>\r\n          <xsl:variable name=\"title-h\" select=\"./subfield[@code=\'h\']\"/>\r\n          <xsl:variable name=\"title-dx\" select=\"substring-after(./subfield[@code=\'a\'], \'@\')\"/>\r\n          <xsl:variable name=\"title-8\" select=\"substring-before(./subfield[@code=\'8\'], \' ; ZDB-ID:\')\"/>\r\n          <xsl:variable name=\"title-l\">\r\n            <xsl:choose>\r\n              <xsl:when test=\"./subfield[@code=\'l\']\">\r\n                <xsl:value-of select=\"concat(\' (\', ./subfield[@code=\'l\'], \')\')\"/>\r\n              </xsl:when>\r\n              <xsl:otherwise/>\r\n            </xsl:choose>\r\n          </xsl:variable>\r\n          <xsl:variable name=\"title-f\">\r\n            <xsl:choose>\r\n              <xsl:when test=\"./subfield[@code=\'f\']\">\r\n                <xsl:value-of select=\"concat(\' = \', ./subfield[@code=\'f\'])\"/>\r\n              </xsl:when>\r\n              <xsl:otherwise/>\r\n            </xsl:choose>\r\n          </xsl:variable>\r\n          <xsl:variable name=\"title-p\">\r\n            <xsl:for-each select=\"../datafield[@tag=\'021C\']\">\r\n              <xsl:value-of select=\"normalize-space(concat(./subfield[@code=\'l\'], \' \', ./subfield[@code=\'a\']))\"/>\r\n              <xsl:if test=\"position() != last()\">\r\n                <xsl:value-of select=\"string(\'. \')\"/>\r\n              </xsl:if>\r\n            </xsl:for-each>\r\n          </xsl:variable>\r\n          <indexTitle>\r\n            <xsl:choose>\r\n              <xsl:when test=\"$title-dx\">\r\n                <xsl:value-of select=\"normalize-space(concat($title-dx, \' \', $title-d, \' \', $title-h))\"/>\r\n              </xsl:when>\r\n              <xsl:otherwise>\r\n                <xsl:value-of select=\"normalize-space(concat($title-a, \' \', $title-d, \' \', $title-h))\"/>\r\n              </xsl:otherwise>\r\n            </xsl:choose>\r\n          </indexTitle>\r\n          <xsl:variable name=\"main-title\">\r\n            <xsl:choose>\r\n              <xsl:when test=\"string($title-h) and string($title-d) and string($title-p)\">\r\n                <xsl:value-of select=\"concat($title-a, \'. \', $title-p, \' : \', $title-d, $title-f, \' / \', $title-h)\"/>\r\n              </xsl:when>\r\n              <xsl:when test=\"string($title-h) and string($title-d)\">\r\n                <xsl:value-of select=\"concat($title-a, \' : \', $title-d, $title-f, \' / \', $title-h)\"/>\r\n              </xsl:when>\r\n              <xsl:when test=\"string($title-d) and string($title-p)\">\r\n                <xsl:value-of select=\"concat($title-a, \'. \', $title-p, \' : \', $title-d, $title-f)\"/>\r\n              </xsl:when>\r\n              <xsl:when test=\"string($title-h) and string($title-p)\">\r\n                <xsl:value-of select=\"concat($title-a, $title-f, \'. \', $title-p, \' / \', $title-h)\"/>\r\n              </xsl:when>\r\n              <xsl:when test=\"string($title-d)\">\r\n                <xsl:value-of select=\"concat($title-a, \' : \', $title-d, $title-f)\"/>\r\n              </xsl:when>\r\n              <xsl:when test=\"string($title-h)\">\r\n                <xsl:value-of select=\"concat($title-a, $title-f, \' / \', $title-h)\"/>\r\n              </xsl:when>\r\n              <xsl:when test=\"string($title-p)\">\r\n                <xsl:value-of select=\"concat($title-a, $title-f, \'. \', $title-p)\"/>\r\n              </xsl:when>\r\n              <xsl:when test=\"string($title-8)\">\r\n                <xsl:value-of select=\"$title-8\"/>\r\n              </xsl:when>\r\n              <xsl:otherwise>\r\n                <xsl:value-of select=\"concat($title-a, $title-f)\"/>\r\n              </xsl:otherwise>\r\n            </xsl:choose>\r\n          </xsl:variable>\r\n          <title>\r\n            <xsl:value-of select=\"concat($main-title,$title-l)\"/>\r\n          </title>\r\n        </xsl:for-each>\r\n      </xsl:when>\r\n      <xsl:otherwise>\r\n        <indexTitle>KEIN TITEL, IN K10plus PRÜFEN</indexTitle>\r\n        <title>KEIN TITEL, IN K10plus PRÜFEN</title>\r\n      </xsl:otherwise>\r\n    </xsl:choose>  -->\r\n\r\n    <!-- Alternative titles -->\r\n\r\n    <!-- hebis: added missing tags: 021A + 036C (Non Latin script), 021M, 021N + 046D -->\r\n    <xsl:if test=\"datafield[@tag=\'047C\' or @tag=\'027A\' or @tag=\'021F\' or @tag=\'046C\' or @tag=\'046D\' or @tag=\'026C\' or @tag=\'036C\' or @tag=\'021A\'] or datafield[@tag=\'022A\'][@occurrence=\'00\']\">\r\n      <alternativeTitles>\r\n        <arr>\r\n\r\n          <xsl:if test=\"not($title-021A-ori = \'\') or not($title-036C-ori = \'\') \">\r\n           <i>\r\n            <alternativeTitle>\r\n              <xsl:choose>\r\n                <xsl:when test=\"boolean(substring(datafield[@tag=\'002@\']/subfield[@code=\'0\'], 2, 1) = \'f\') and datafield[@tag=\'036C\']\">\r\n                  <xsl:value-of select=\"normalize-space(substring-after($title-036C-ori, \'. \'))\"/>\r\n                  <xsl:if test=\"$title-021A and boolean(substring($title-021A-ori, 1, 1) != \' \')\">\r\n                    <xsl:value-of select=\"concat(\' ; \', $title-021A)\"/>\r\n                  </xsl:if>\r\n                  <xsl:if test=\"$title-021A-ori  != \'\' and boolean(substring($title-021A-ori, 1, 1) = \' \')\">\r\n                    <xsl:value-of select=\"$title-021A-ori\"/>\r\n                  </xsl:if>\r\n                </xsl:when> \r\n                <!-- TBD: need for adjustment at GBV\r\n                <xsl:when test=\"boolean(substring(datafield[@tag=\'002@\']/subfield[@code=\'0\'], 2, 1) = \'f\') and datafield[@tag=\'036E\']\">036E</xsl:when> \r\n                <xsl:when test=\"boolean(substring(datafield[@tag=\'002@\']/subfield[@code=\'0\'], 2, 1) = \'v\') and datafield[@tag=\'036F\']/subfield[@code=\'8\']\">036F</xsl:when> -->\r\n                <xsl:otherwise>\r\n                  <xsl:value-of select=\"concat($title-021A-ori, $title-021C-ori)\"/>\r\n                  <!-- hebis: ZDB special feature since the RDA switch:\r\n                              Edition Statement instead of subseries -->\r\n                  <xsl:if test=\"boolean(substring(datafield[@tag=\'002@\']/subfield[@code=\'0\'], 2, 1) = \'b\') or boolean(substring(datafield[@tag=\'002@\']/subfield[@code=\'0\'], 2, 1) = \'d\')\">\r\n                    <xsl:if test=\"datafield[@tag=\'032@\']/subfield[@code=\'a\'] != \'\'\">\r\n                      <xsl:value-of select=\"concat(\'. \', datafield[@tag=\'032@\']/subfield[@code=\'a\'])\"/>\r\n                    </xsl:if>\r\n                  </xsl:if>\r\n                  <xsl:if test=\"$title-021M-ori\">\r\n                    <xsl:value-of select=\"$title-021M-ori\"/>\r\n                  </xsl:if>\r\n                    <xsl:choose>\r\n                      <xsl:when test=\"boolean(substring($title-021N-ori, 1, 1) = \'/\')\">\r\n                        <xsl:value-of select=\"concat(\' \', $title-021N-ori)\"/>\r\n                      </xsl:when>\r\n                      <xsl:otherwise>\r\n                        <xsl:value-of select=\"concat(\' | \', $title-021N-ori)\"/>\r\n                      </xsl:otherwise>\r\n                    </xsl:choose>\r\n                </xsl:otherwise>\r\n              </xsl:choose>\r\n            </alternativeTitle>\r\n            <alternativeTitleTypeId>Other title</alternativeTitleTypeId>\r\n           </i>\r\n          </xsl:if>\r\n\r\n\r\n          <xsl:for-each select=\"datafield[@tag=\'047C\' or @tag=\'027A\' or @tag=\'026C\']\">\r\n            <i>\r\n              <alternativeTitle>\r\n                <xsl:value-of select=\"translate(./subfield[@code=\'a\'], \'@\', \'\')\"/>\r\n              </alternativeTitle>\r\n              <alternativeTitleTypeId>\r\n                <xsl:choose>\r\n                  <xsl:when test=\"./@tag=\'047C\'\">Portion of title</xsl:when>\r\n                  <xsl:when test=\"./@tag=\'026C\'\">Distinctive title</xsl:when>\r\n                  <xsl:otherwise>Other title</xsl:otherwise>\r\n                </xsl:choose>\r\n              </alternativeTitleTypeId>\r\n            </i>\r\n          </xsl:for-each>\r\n          <xsl:for-each select=\"datafield[@tag=\'021F\']\">\r\n            <xsl:variable name=\"pta\" select=\"./subfield[@code=\'a\']\"/>\r\n            <xsl:variable name=\"ptd\" select=\"./subfield[@code=\'d\']\"/>\r\n            <xsl:variable name=\"pth\" select=\"./subfield[@code=\'h\']\"/>\r\n            <i>\r\n              <alternativeTitle>\r\n                <xsl:choose>\r\n                  <xsl:when test=\"$ptd and $pth\">\r\n                    <xsl:value-of select=\"concat($pta, \' : \', $ptd, \' / \', $pth)\"/>\r\n                  </xsl:when>\r\n                  <xsl:when test=\"$ptd\">\r\n                    <xsl:value-of select=\"concat($pta, \' : \', $ptd)\"/>\r\n                  </xsl:when>\r\n                  <xsl:when test=\"$pth\">\r\n                    <xsl:value-of select=\"concat($pta, \' / \', $pth)\"/>\r\n                  </xsl:when>\r\n                  <xsl:otherwise>\r\n                    <xsl:value-of select=\"$pta\"/>\r\n                  </xsl:otherwise>\r\n                </xsl:choose>\r\n              </alternativeTitle>\r\n              <alternativeTitleTypeId>Parallel title</alternativeTitleTypeId>\r\n            </i>\r\n          </xsl:for-each>\r\n          <xsl:for-each select=\"datafield[@tag=\'046C\']\">\r\n            <xsl:variable name=\"vti\" select=\"./subfield[@code=\'i\']\"/>\r\n            <xsl:variable name=\"vta\" select=\"./subfield[@code=\'a\']\"/>\r\n            <i>\r\n              <alternativeTitle>\r\n                <xsl:choose>\r\n                  <xsl:when test=\"$vti and $vta\">\r\n                    <xsl:value-of select=\"concat($vti, \': \', $vta)\"/>\r\n                  </xsl:when>\r\n                  <xsl:otherwise>\r\n                    <xsl:value-of select=\"$vta\"/>\r\n                  </xsl:otherwise>\r\n                </xsl:choose>\r\n              </alternativeTitle>\r\n              <alternativeTitleTypeId>Other title</alternativeTitleTypeId> \r\n            </i>\r\n          </xsl:for-each>\r\n\r\n          <!-- hebis: added missing tag -->\r\n          <xsl:for-each select=\"datafield[@tag=\'046D\']\">\r\n            <xsl:variable name=\"vti\" select=\"./subfield[@code=\'i\']\"/>\r\n            <xsl:variable name=\"vta\" select=\"./subfield[@code=\'a\']\"/>\r\n            <i>\r\n              <alternativeTitle>\r\n                <xsl:choose>\r\n                  <xsl:when test=\"$vti and $vta\">\r\n                    <xsl:if test=\"./subfield[@code=\'z\'] = \'e\'\">Frühester </xsl:if>\r\n                    <xsl:value-of select=\"concat($vti, \': \', $vta)\"/>\r\n                  </xsl:when>\r\n                  <xsl:otherwise>\r\n                    <xsl:value-of select=\"$vta\"/>\r\n                  </xsl:otherwise>\r\n                </xsl:choose>\r\n              </alternativeTitle>\r\n              <alternativeTitleTypeId>Other title</alternativeTitleTypeId>\r\n            </i>\r\n          </xsl:for-each>\r\n\r\n          <!-- hebis: added missing subfields -->\r\n          <xsl:for-each select=\"datafield[@tag=\'022A\']\">\r\n            <i>\r\n              <alternativeTitle>\r\n               <xsl:variable name=\"con-name\">\r\n                <xsl:choose>\r\n                  <xsl:when test=\"./subfield[@code=\'8\']\">\r\n                    <xsl:value-of select=\"substring-before(./subfield[@code=\'8\'], \' ; ID:\')\"/>\r\n                  </xsl:when>\r\n                  <xsl:otherwise>\r\n                    <xsl:for-each select=\"subfield\">\r\n                      <xsl:choose>\r\n                        <xsl:when test=\"@code=\'a\'\">\r\n                          <xsl:value-of select=\".\"/>\r\n                        </xsl:when>\r\n                        <xsl:when test=\"@code=\'f\' or @code=\'g\'\">\r\n                          <xsl:value-of select=\"concat(\' (\',.,\')\')\"/>\r\n                        </xsl:when>\r\n                        <xsl:when test=\"@code=\'m\' or @code=\'n\' or @code=\'h\' or @code=\'l\' or @code=\'r\' or @code=\'x\'\">\r\n                          <xsl:value-of select=\"concat(\', \',.)\"/>\r\n                        </xsl:when>\r\n                        <xsl:when test=\"@code=\'k\' or @code=\'p\' or @code=\'s\'\">\r\n                          <xsl:value-of select=\"concat(\'. \',.)\"/>\r\n                        </xsl:when>\r\n                        <xsl:when test=\"@code=\'o\'\">\r\n                          <xsl:value-of select=\"concat(\'; \',.)\"/>\r\n                        </xsl:when>\r\n                      </xsl:choose> \r\n                    </xsl:for-each>\r\n                  </xsl:otherwise>\r\n                </xsl:choose>\r\n              </xsl:variable>\r\n              <xsl:value-of select=\"$con-name\"/>\r\n              </alternativeTitle>\r\n              <alternativeTitleTypeId>Uniform title</alternativeTitleTypeId>\r\n            </i>\r\n          </xsl:for-each>\r\n\r\n        </arr>\r\n      </alternativeTitles>\r\n    </xsl:if>\r\n\r\n    <!-- Contributors -->\r\n    <xsl:if test=\"datafield[@tag=\'028A\' or @tag=\'028B\' or @tag=\'028C\' or @tag=\'028G\' or @tag=\'029A\']\">\r\n      <contributors>\r\n        <arr>\r\n          <xsl:for-each select=\"datafield[@tag=\'028A\' or @tag=\'028B\' or @tag=\'028C\' or @tag=\'028G\']\">\r\n            <xsl:if test=\"subfield[@code=\'a\' or @code=\'A\' or @code=\'P\' or @code=\'8\']\">\r\n              <xsl:variable name=\"con-name\">\r\n                <xsl:choose>\r\n                  <xsl:when test=\"./subfield[@code=\'8\'][contains(., \' ; ID:\')]\">\r\n                    <xsl:value-of select=\"substring-before(./subfield[@code=\'8\'], \' ; ID:\')\"/>\r\n                  </xsl:when>\r\n                  <xsl:when test=\"./subfield[@code=\'8\']\">\r\n                    <xsl:value-of select=\"./subfield[@code=\'8\']\"/>\r\n                  </xsl:when>\r\n                  <xsl:when test=\"./subfield[@code=\'P\']\">\r\n                    <xsl:value-of select=\"./subfield[@code=\'P\']\"/>\r\n                  </xsl:when>\r\n                  <xsl:when test=\"./subfield[@code=\'d\' or @code=\'D\']\">\r\n                    <xsl:variable name=\"name\" select=\"concat(./subfield[@code=\'a\' or @code=\'A\'], \', \', ./subfield[@code=\'d\' or @code=\'D\'])\"/>\r\n                    <xsl:choose>\r\n                      <xsl:when test=\"./subfield[@code=\'c\' or @code=\'C\']\">\r\n                        <xsl:value-of select=\"concat($name, \' \', ./subfield[@code=\'c\' or @code=\'C\'])\"/>\r\n                      </xsl:when>\r\n                      <xsl:when test=\"./subfield[@code=\'n\' or @code=\'N\']\">\r\n                        <xsl:value-of select=\"concat($name, \', \', ./subfield[@code=\'n\' or @code=\'N\'])\"/>\r\n                      </xsl:when>\r\n                      <xsl:when test=\"./subfield[@code=\'l\' or @code=\'L\']\">\r\n                        <xsl:value-of select=\"concat($name, \' &lt;\', ./subfield[@code=\'l\' or @code=\'L\'], \'&gt;\')\"/>\r\n                      </xsl:when>\r\n                      <xsl:otherwise>\r\n                        <xsl:value-of select=\"$name\"/>\r\n                      </xsl:otherwise>\r\n                    </xsl:choose>\r\n                  </xsl:when>\r\n                  <xsl:otherwise>\r\n                    <xsl:value-of select=\"./subfield[@code=\'a\' or @code=\'A\']\"/>\r\n                  </xsl:otherwise>\r\n                </xsl:choose>\r\n              </xsl:variable>\r\n              <xsl:if test=\"string-length($con-name) &gt; 0\">\r\n                <i>\r\n                  <name>\r\n                    <xsl:value-of select=\"$con-name\"/>\r\n                  </name>\r\n                  <contributorNameTypeId>2b94c631-fca9-4892-a730-03ee529ffe2a</contributorNameTypeId>\r\n                  <!-- personal name -->\r\n                  <xsl:if test=\"@tag=\'028A\'\">\r\n                    <primary>true</primary>\r\n                  </xsl:if>\r\n                  <xsl:if test=\"./subfield[@code=\'4\']\">\r\n                    <contributorTypeId>\r\n                      <xsl:value-of select=\"./subfield[@code=\'4\']\"/>\r\n                    </contributorTypeId>\r\n                  </xsl:if>\r\n				  <xsl:if test=\"./subfield[@code=\'B\']\">\r\n                    <contributorTypeText>\r\n                      <xsl:value-of select=\"./subfield[@code=\'B\']\"/>\r\n                    </contributorTypeText>\r\n                  </xsl:if>\r\n                </i>\r\n              </xsl:if>\r\n            </xsl:if>\r\n          </xsl:for-each>\r\n          <!-- Corporate authors-->\r\n          <xsl:for-each select=\"datafield[@tag=\'029A\' or @tag=\'029F\']\">\r\n            <xsl:variable name=\"cpa\" select=\"./subfield[@code=\'a\' or @code=\'A\']\"/>\r\n            <xsl:variable name=\"cpx\" select=\"./subfield[@code=\'x\' or @code=\'X\']\"/>\r\n            <xsl:variable name=\"cpg\" select=\"./subfield[@code=\'g\' or @code=\'G\']\"/>\r\n            <xsl:variable name=\"cpb\">\r\n              <xsl:call-template name=\"join\">\r\n                <xsl:with-param name=\"list\" select=\"./subfield[@code=\'b\' or @code=\'B\']\"/>\r\n                <xsl:with-param name=\"separator\" select=\"\' / \'\"/>\r\n              </xsl:call-template>\r\n            </xsl:variable>\r\n            <xsl:variable name=\"cpn\">\r\n              <xsl:call-template name=\"join\">\r\n                <xsl:with-param name=\"list\" select=\"./subfield[@code=\'n\' or @code=\'N\']\"/>\r\n                <xsl:with-param name=\"separator\" select=\"\', \'\"/>\r\n              </xsl:call-template>\r\n            </xsl:variable>\r\n            <xsl:variable name=\"cpd\">\r\n              <xsl:call-template name=\"join\">\r\n                <xsl:with-param name=\"list\" select=\"./subfield[@code=\'d\' or @code=\'D\']\"/>\r\n                <xsl:with-param name=\"separator\" select=\"\' ; \'\"/>\r\n              </xsl:call-template>\r\n            </xsl:variable>\r\n            <xsl:variable name=\"cpc\">\r\n              <xsl:call-template name=\"join\">\r\n                <xsl:with-param name=\"list\" select=\"./subfield[@code=\'c\' or @code=\'C\']\"/>\r\n                <xsl:with-param name=\"separator\" select=\"\' ; \'\"/>\r\n              </xsl:call-template>\r\n            </xsl:variable>\r\n            <xsl:variable name=\"lash\" select=\"\' / \'\"/>\r\n            <xsl:variable name=\"name\">\r\n              <xsl:choose>\r\n                <xsl:when test=\"./subfield[@code=\'8\'][contains(., \' ; ID:\')]\">\r\n                  <xsl:value-of select=\"substring-before(./subfield[@code=\'8\'], \' ; ID:\')\"/>\r\n                </xsl:when>\r\n                <xsl:when test=\"./subfield[@code=\'8\']\">\r\n                  <xsl:value-of select=\"./subfield[@code=\'8\']\"/>\r\n                </xsl:when>\r\n                <xsl:when test=\"$cpa and string($cpb) and string($cpg) and string($cpx) and string($cpn) and string($cpd) and string($cpc)\">\r\n                  <xsl:value-of select=\"concat($cpa,$lash,$cpb,$lash,$cpg,$lash,$cpx,\' (\',$cpn,\') : \',$cpd,$lash,$cpc)\"/>\r\n                </xsl:when>\r\n                <xsl:when test=\"$cpa and string($cpb) and string($cpg) and string($cpn) and string($cpd) and string($cpc)\">\r\n                  <xsl:value-of select=\"concat($cpa,$lash,$cpb,$lash,$cpg,\' (\',$cpn,\') : \',$cpd,$lash,$cpc)\"/>\r\n                </xsl:when>\r\n                <xsl:when test=\"$cpa and string($cpb) and string($cpn) and string($cpd) and string($cpc)\">\r\n                  <xsl:value-of select=\"concat($cpa,$lash,$cpb,\' (\',$cpn,\') : \',$cpd,$lash,$cpc)\"/>\r\n                </xsl:when>\r\n                <xsl:when test=\"$cpa and string($cpb) and string($cpg)\">\r\n                  <xsl:value-of select=\"concat($cpa,$lash,$cpb,$lash,$cpg)\"/>\r\n                </xsl:when>\r\n                <xsl:when test=\"$cpa and string($cpg)\">\r\n                  <xsl:value-of select=\"concat($cpa,$lash,$cpg)\"/>\r\n                </xsl:when>\r\n                <xsl:when test=\"$cpa and string($cpb)\">\r\n                  <xsl:value-of select=\"concat($cpa,$lash,$cpb)\"/>\r\n                </xsl:when>\r\n                <xsl:when test=\"string($cpb)\">\r\n                  <xsl:value-of select=\"$cpb\"/>\r\n                </xsl:when>\r\n                <xsl:otherwise>\r\n                  <xsl:value-of select=\"$cpa\"/>\r\n                </xsl:otherwise>\r\n              </xsl:choose>\r\n            </xsl:variable>\r\n            <xsl:if test=\"string-length($name) &gt; 0\">\r\n              <i>\r\n                <name>\r\n                  <xsl:value-of select=\"$name\"/>\r\n                </name>\r\n                <contributorNameTypeId>2e48e713-17f3-4c13-a9f8-23845bb210aa</contributorNameTypeId>\r\n                <xsl:if test=\"./subfield[@code=\'4\']\">\r\n                  <contributorTypeId>\r\n                    <xsl:value-of select=\"./subfield[@code=\'4\']\"/>\r\n                  </contributorTypeId>\r\n                </xsl:if>\r\n              </i>\r\n            </xsl:if>\r\n          </xsl:for-each>\r\n        </arr>\r\n      </contributors>\r\n    </xsl:if>\r\n    <!-- Publication -->\r\n    <publication>\r\n      <arr>\r\n        <xsl:for-each select=\"datafield[@tag=\'033A\' or @tag=\'033E\' or @tag=\'033C\']\">\r\n          <i>\r\n            <place>\r\n              <xsl:call-template name=\"join\">\r\n                <xsl:with-param name=\"list\" select=\"./subfield[@code=\'p\']\"/>\r\n                <xsl:with-param name=\"separator\" select=\"\' ; \'\"/>\r\n              </xsl:call-template>\r\n            </place>\r\n            <publisher>\r\n              <xsl:for-each select=\"./subfield[@code=\'n\']\">\r\n                <xsl:variable name=\"pos\" select=\"position()\"/>\r\n                <xsl:if test=\"../subfield[@code=\'z\'][$pos] = \'e\'\">erster: </xsl:if>\r\n                <xsl:if test=\"../subfield[@code=\'z\'][$pos] = \'f\'\">früher: </xsl:if>\r\n                <xsl:if test=\"../subfield[@code=\'z\'][$pos] = \'s\'\">später: </xsl:if>\r\n                <xsl:value-of select=\".\"/>\r\n                <xsl:if test=\"../subfield[@code=\'h\'][$pos]\">\r\n                  <xsl:value-of select=\"concat(\' (\', ../subfield[@code=\'h\'][$pos], \')\')\"/>\r\n                </xsl:if>\r\n                <xsl:if test=\"$pos != last()\"> ; </xsl:if>\r\n              </xsl:for-each>\r\n            </publisher>\r\n            <xsl:if test=\"..//datafield[@tag=\'011@\']\">\r\n              <dateOfPublication>\r\n                <xsl:variable name=\"date-a\" select=\"../datafield[@tag=\'011@\']/subfield[@code=\'a\']\"/>\r\n                <xsl:variable name=\"date-b\" select=\"../datafield[@tag=\'011@\']/subfield[@code=\'b\']\"/>\r\n                <xsl:variable name=\"date-c\" select=\"../datafield[@tag=\'011@\']/subfield[@code=\'c\']\"/>\r\n                <xsl:variable name=\"date-d\" select=\"../datafield[@tag=\'011@\']/subfield[@code=\'d\']\"/>\r\n                <xsl:variable name=\"date-n\" select=\"../datafield[@tag=\'011@\']/subfield[@code=\'n\']\"/>\r\n                <xsl:variable name=\"date-ab\" select=\"concat($date-a, \'-\', $date-b)\"/>\r\n                <xsl:variable name=\"date-cd\" select=\"concat($date-c, \'-\', $date-d)\"/>\r\n                <xsl:variable name=\"date-ac\" select=\"concat($date-a, \' (\', $date-c, \')\')\"/>\r\n                <xsl:variable name=\"date-abcd\" select=\"concat($date-ab, \' (\', $date-cd, \')\')\"/>\r\n                <xsl:choose>\r\n                  <xsl:when test=\"$date-d and $date-n\">\r\n                    <xsl:value-of select=\"concat($date-abcd, \' (\', $date-n, \')\')\"/>\r\n                  </xsl:when>\r\n                  <xsl:when test=\"$date-d\">\r\n                    <xsl:value-of select=\"$date-abcd\"/>\r\n                  </xsl:when>\r\n                  <xsl:when test=\"$date-c and $date-n\">\r\n                    <xsl:value-of select=\"concat($date-ac, \' (\', $date-n, \')\')\"/>\r\n                  </xsl:when>\r\n                  <xsl:when test=\"$date-c\">\r\n                    <xsl:value-of select=\"$date-ac\"/>\r\n                  </xsl:when>\r\n                  <xsl:when test=\"$date-b and $date-n\">\r\n                    <xsl:value-of select=\"concat($date-ab, \' (\', $date-n, \')\')\"/>\r\n                  </xsl:when>\r\n                  <xsl:when test=\"$date-b\">\r\n                    <xsl:value-of select=\"$date-ab\"/>\r\n                  </xsl:when>\r\n                  <xsl:when test=\"$date-a and $date-n\">\r\n                    <xsl:value-of select=\"concat($date-a, \' (\', $date-n, \')\')\"/>\r\n                  </xsl:when>\r\n                  <xsl:otherwise>\r\n                    <xsl:value-of select=\"$date-a\"/>\r\n                  </xsl:otherwise>\r\n                </xsl:choose>\r\n              </dateOfPublication>\r\n            </xsl:if>\r\n            <role>\r\n              <xsl:choose>\r\n                <xsl:when test=\"./@tag = \'033C\'\">Manufacturer</xsl:when>\r\n                <xsl:when test=\"./@tag = \'033E\'\">Distributor</xsl:when>\r\n                <xsl:otherwise>Publisher</xsl:otherwise>\r\n              </xsl:choose>\r\n            </role>\r\n          </i>\r\n        </xsl:for-each>\r\n      </arr>\r\n    </publication>\r\n    <!-- Publication frequency -->\r\n	<xsl:if test=\"datafield[@tag=\'018@\']\">\r\n      <publicationFrequency>\r\n        <arr>\r\n          <xsl:for-each select=\"datafield[@tag=\'018@\']\">\r\n            <i>\r\n              <xsl:choose>\r\n                <xsl:when test=\"./subfield[@code=\'a\']=\'d\'\">täglich</xsl:when>\r\n				<xsl:when test=\"./subfield[@code=\'a\']=\'t\'\">drei- bis fünfmal wöchentlich</xsl:when>\r\n				<xsl:when test=\"./subfield[@code=\'a\']=\'c\'\">zweimal wöchentlich</xsl:when>\r\n				<xsl:when test=\"./subfield[@code=\'a\']=\'w\'\">wöchentlich</xsl:when>\r\n				<xsl:when test=\"./subfield[@code=\'a\']=\'j\'\">dreimal im Monat</xsl:when>\r\n				<xsl:when test=\"./subfield[@code=\'a\']=\'e\'\">vierzehntägig</xsl:when>\r\n				<xsl:when test=\"./subfield[@code=\'a\']=\'s\'\">halbmonatlich</xsl:when>\r\n				<xsl:when test=\"./subfield[@code=\'a\']=\'m\'\">monatlich</xsl:when>\r\n				<xsl:when test=\"./subfield[@code=\'a\']=\'b\'\">alle zwei Monate</xsl:when>\r\n				<xsl:when test=\"./subfield[@code=\'a\']=\'q\'\">vierteljährlich</xsl:when>\r\n				<xsl:when test=\"./subfield[@code=\'a\']=\'i\'\">dreimal im Jahr</xsl:when>\r\n				<xsl:when test=\"./subfield[@code=\'a\']=\'f\'\">halbjährlich</xsl:when>\r\n				<xsl:when test=\"./subfield[@code=\'a\']=\'a\'\">jährlich</xsl:when>\r\n				<xsl:when test=\"./subfield[@code=\'a\']=\'g\'\">alle zwei Jahre</xsl:when>\r\n				<xsl:when test=\"./subfield[@code=\'a\']=\'h\'\">alle drei Jahre</xsl:when>\r\n				<xsl:when test=\"./subfield[@code=\'a\']=\'z\'\">unregelmäßig</xsl:when>\r\n				<xsl:otherwise/>\r\n              </xsl:choose>\r\n            </i>\r\n          </xsl:for-each>\r\n        </arr>\r\n      </publicationFrequency>\r\n    </xsl:if>\r\n    <!-- Publication range -->\r\n    <xsl:if test=\"datafield[@tag=\'031@\']\">\r\n      <publicationRange>\r\n        <arr>\r\n          <i>\r\n            <xsl:value-of select=\"datafield[@tag=\'031@\']/subfield[@code=\'a\']\"/>\r\n          </i>\r\n        </arr>\r\n      </publicationRange>\r\n    </xsl:if>\r\n    <!-- Electronic access -->\r\n    <electronicAccess>\r\n      <arr>\r\n        <xsl:for-each select=\"datafield[@tag=\'009P\' or @tag=\'017C\' or @tag=\'017M\' or @tag=\'017R\' or @tag=\'109R\']\">\r\n          <xsl:if test=\"./@tag=\'009P\' and ./subfield[@code=\'a\']\">\r\n            <i>\r\n              <uri>\r\n                <xsl:value-of select=\"./subfield[@code=\'a\']\"/>\r\n              </uri>\r\n              <materialsSpecification>\r\n                <xsl:value-of select=\"./subfield[@code=\'3\']\"/>\r\n              </materialsSpecification>\r\n              <publicNote>\r\n                <xsl:value-of select=\"./subfield[@code=\'4\']\"/>\r\n              </publicNote>\r\n              <relationshipId>f5d0068e-6272-458e-8a81-b85e7b9a14aa</relationshipId>\r\n              <!-- Resource -->\r\n            </i>\r\n          </xsl:if>\r\n          <xsl:if test=\"./@tag=\'017C\' and ./subfield[@code=\'u\']\">\r\n            <i>\r\n              <uri>\r\n                <xsl:value-of select=\"./subfield[@code=\'u\']\"/>\r\n              </uri>\r\n              <materialsSpecification>\r\n                <xsl:value-of select=\"./subfield[@code=\'3\']\"/>\r\n              </materialsSpecification>\r\n              <publicNote>\r\n                <xsl:value-of select=\"./subfield[@code=\'4\']\"/>\r\n              </publicNote>\r\n              <relationshipId>f5d0068e-6272-458e-8a81-b85e7b9a14aa</relationshipId>\r\n            </i>\r\n          </xsl:if>\r\n		      <xsl:if test=\"./@tag=\'017R\' and ./subfield[@code=\'u\']\">\r\n            <i>\r\n              <uri>\r\n                <xsl:value-of select=\"./subfield[@code=\'u\']\"/>\r\n              </uri>\r\n              <materialsSpecification>\r\n                <xsl:value-of select=\"./subfield[@code=\'g\']\"/>\r\n              </materialsSpecification>\r\n			        <linkText>\r\n				        <xsl:value-of select=\"./subfield[@code=\'a\']\"/>\r\n			        </linkText>\r\n              <relationshipId>0ce08069-8f5f-411b-b622-46674aa66a45</relationshipId>\r\n			        <!-- Access Status -->\r\n            </i>\r\n          </xsl:if>\r\n		      <xsl:if test=\"./@tag=\'017M\' and ./subfield[@code=\'u\']\">\r\n            <i>\r\n              <uri>\r\n                <xsl:value-of select=\"./subfield[@code=\'u\']\"/>\r\n              </uri>\r\n              <materialsSpecification>\r\n                <xsl:value-of select=\"./subfield[@code=\'g\']\"/>\r\n              </materialsSpecification>\r\n              <linkText>\r\n                <xsl:value-of select=\"./subfield[@code=\'a\']\"/>\r\n              </linkText>\r\n              <relationshipId>f781cb3d-af16-40f6-9d02-c24204ac6fdc</relationshipId>\r\n			        <!-- Rechteinformation -->\r\n            </i>\r\n          </xsl:if>\r\n		      <xsl:if test=\"./@tag=\'109R\' and ./subfield[@code=\'u\']\">\r\n            <i>\r\n              <uri>\r\n                <xsl:value-of select=\"./subfield[@code=\'u\']\"/>\r\n              </uri>\r\n              <relationshipId>1e178616-2b75-4ecf-a8c8-99b85273dcfc</relationshipId>\r\n			        <!-- EZB-Frontpage (3433) -->\r\n            </i>\r\n          </xsl:if>\r\n        </xsl:for-each>\r\n      </arr>\r\n    </electronicAccess>\r\n    <!-- Notes -->\r\n    <xsl:if test=\"datafield[@tag=\'011B\' or @tag=\'037A\' or @tag=\'046P\' or @tag=\'046L\' or @tag=\'046K\' or @tag=\'047I\' or @tag=\'048H\']\">\r\n      <notes>\r\n        <arr>\r\n          <xsl:for-each select=\"datafield[@tag=\'011B\' or @tag=\'037A\' or @tag=\'037I\' or @tag=\'046P\' or @tag=\'046L\' or @tag=\'046K\']\">\r\n            <i>\r\n              <xsl:choose>\r\n                <xsl:when test=\"./@tag=\'011B\'\">\r\n                  <note>\r\n                    <xsl:if test=\"./subfield[@code=\'b\']\">\r\n                      <xsl:value-of select=\"concat(./subfield[@code=\'a\'], \'-\', ./subfield[@code=\'b\'])\"/>\r\n                    </xsl:if>\r\n                    <xsl:if test=\"not(./subfield[@code=\'b\'])\">\r\n                      <xsl:value-of select=\"./subfield[@code=\'a\']\"/>\r\n                    </xsl:if>\r\n                  </note>\r\n                  <instanceNoteTypeId>Reproduction note</instanceNoteTypeId>\r\n                </xsl:when>\r\n                <xsl:when test=\"./@tag=\'037A\'\">\r\n                  <note>\r\n                    <xsl:choose>\r\n                      <xsl:when test=\"./subfield[@code=\'A\']\">\r\n                        <xsl:value-of select=\"concat(./subfield[@code=\'a\'], \' (Quelle: \', ./subfield[@code=\'A\'], \')\')\"/>\r\n                      </xsl:when>\r\n                      <xsl:otherwise>\r\n                        <xsl:value-of select=\"./subfield[@code=\'a\']\"/>\r\n                      </xsl:otherwise>\r\n                    </xsl:choose>\r\n                  </note>\r\n                  <instanceNoteTypeId>General note</instanceNoteTypeId>\r\n                </xsl:when>\r\n                <xsl:otherwise>\r\n                  <note>\r\n                    <xsl:value-of select=\"./subfield[@code=\'a\']\"/>\r\n                  </note>\r\n                  <xsl:choose>\r\n                    <xsl:when test=\"./@tag=\'046K\'\">\r\n                      <instanceNoteTypeId>Estimated publication date</instanceNoteTypeId>\r\n                    </xsl:when>\r\n                    <xsl:when test=\"./@tag=\'046L\'\">\r\n                      <instanceNoteTypeId>Language note</instanceNoteTypeId>\r\n                    </xsl:when>\r\n                    <xsl:when test=\"./@tag=\'046P\'\">\r\n                      <instanceNoteTypeId>Numbering peculiarities note</instanceNoteTypeId>\r\n                    </xsl:when>\r\n                    <xsl:when test=\"./@tag=\'047I\'\">\r\n                      <instanceNoteTypeId>Summary</instanceNoteTypeId>\r\n                    </xsl:when>\r\n                    <xsl:when test=\"./@tag=\'037I\'\">\r\n                      <instanceNoteTypeId>Reproduction note</instanceNoteTypeId>\r\n                    </xsl:when>\r\n                    <xsl:when test=\"./@tag=\'048H\'\">\r\n                      <instanceNoteTypeId>System Details note</instanceNoteTypeId>\r\n                    </xsl:when>\r\n                    <xsl:otherwise>\r\n                      <instanceNoteTypeId>General note</instanceNoteTypeId>\r\n                    </xsl:otherwise>\r\n                  </xsl:choose>\r\n                </xsl:otherwise>\r\n              </xsl:choose>\r\n            </i>\r\n          </xsl:for-each>\r\n        </arr>\r\n      </notes>\r\n    </xsl:if>\r\n    <!-- Nature of contents -->\r\n    <xsl:if test=\"datafield[@tag=\'013D\']\">\r\n      <natureOfContentTermIds>\r\n        <arr>\r\n          <xsl:for-each select=\"datafield[@tag=\'013D\']\">\r\n            <i>\r\n              <xsl:choose>\r\n                <xsl:when test=\"./subfield[@code=\'9\']=\'132098628\'\">96879b60-098b-453b-bf9a-c47866f1ab2a</xsl:when>\r\n                <!-- Hörbuch -->\r\n                <xsl:when test=\"./subfield[@code=\'9\']=\'106388258\'\">04a6a8d2-f902-4774-b15f-d8bd885dc804</xsl:when>\r\n                <!-- Autobiografie -->\r\n                <xsl:when test=\"./subfield[@code=\'9\']=\'104814519\'\">f5908d05-b16a-49cf-b192-96d55a94a0d1</xsl:when>\r\n                <!-- Bibliografie -->\r\n                <xsl:when test=\"./subfield[@code=\'9\']=\'104213493\'\">b6e214bd-82f5-467f-af5b-4592456dc4ab</xsl:when>\r\n                <!-- Biografie -->\r\n                <xsl:when test=\"./subfield[@code=\'9\']=\'10566491X\'\">b82b3a0d-00fa-4811-96da-04f531da8ea8</xsl:when>\r\n                <!-- Ausstellungskatalog -->\r\n                <xsl:when test=\"./subfield[@code=\'9\']=\'105681490\'\">c0d52f31-aabb-4c55-bf81-fea7fdda94a4</xsl:when>\r\n                <!-- Erlebnisbericht -->\r\n                <xsl:when test=\"./subfield[@code=\'9\']=\'104400986\'\">b29d4dc1-f78b-48fe-b3e5-df6c37cdc58d</xsl:when>\r\n                <!-- Festschrift -->\r\n                <xsl:when test=\"./subfield[@code=\'9\']=\'104450835\'\">631893b6-5d8a-4e1a-9e6b-5344e2945c74</xsl:when>\r\n                <!-- Bildband -->\r\n                <xsl:when test=\"./subfield[@code=\'9\']=\'104712805\'\">31572023-f4c9-4cf3-80a2-0543c9eda884</xsl:when>\r\n                <!-- Literaturbericht -->\r\n                <xsl:when test=\"./subfield[@code=\'9\']=\'826484824\'\">073f7f2f-9212-4395-b039-6f9825b11d54</xsl:when>\r\n                <!-- Konferenzschrift -->\r\n                <xsl:when test=\"./subfield[@code=\'9\']=\'10467444X\'\">4570a93e-ddb6-4200-8e8b-283c8f5c9bfa</xsl:when>\r\n                <!-- Forschungsbericht -->\r\n                <xsl:when test=\"./subfield[@code=\'9\']=\'104383704\'\">44cd89f3-2e76-469f-a955-cc57cb9e0395</xsl:when>\r\n                <!-- Schulbuch -->\r\n                <xsl:when test=\"./subfield[@code=\'9\']=\'104189037\'\">9419a20e-6c8f-4ae1-85a7-8c184a1f4762</xsl:when>\r\n                <!-- Reisebericht -->\r\n                <xsl:when test=\"./subfield[@code=\'9\']=\'32609296X\'\">2fbc8a7b-b432-45df-ba37-46031b1f6545</xsl:when>\r\n                <!-- Website -->\r\n                <xsl:when test=\"./subfield[@code=\'9\']=\'104616091\'\">71b43e3a-8cdd-4d22-9751-020f34fb6ef8</xsl:when>\r\n                <!-- Bericht -->\r\n                <xsl:when test=\"./subfield[@code=\'9\']=\'105825778\'\">94f6d06a-61e0-47c1-bbcb-6186989e6040</xsl:when>\r\n                <!-- Hochschulschrift -->\r\n                <xsl:when test=\"./subfield[@code=\'9\']=\'104377402\'\">acceb2d6-4f05-408f-9a88-a92de26441ce</xsl:when>\r\n                <!-- Comic -->\r\n                <xsl:when test=\"./subfield[@code=\'9\']=\'104628669\'\">536da7c1-9c35-45df-8ea1-c3545448df92</xsl:when>\r\n                <!-- Monografische Reihe -->\r\n                <xsl:when test=\"./subfield[@code=\'9\']=\'10454466X\'\">0abeee3d-8ad2-4b04-92ff-221b4fce1075</xsl:when>\r\n                <!-- Zeitschrift -->\r\n                <xsl:when test=\"./subfield[@code=\'9\']=\'106108832\'\">ebbbdef1-00e1-428b-bc11-314dc0705074</xsl:when>\r\n                <!-- Zeitung -->\r\n                <xsl:otherwise/>\r\n              </xsl:choose>\r\n            </i>\r\n          </xsl:for-each>\r\n        </arr>\r\n      </natureOfContentTermIds>\r\n    </xsl:if>\r\n    <!-- languages -->\r\n    <xsl:if test=\"datafield[@tag=\'010@\']/subfield[@code=\'a\']\">\r\n      <languages>\r\n        <arr>\r\n          <xsl:for-each select=\"datafield[@tag=\'010@\']/subfield[@code=\'a\']\">\r\n            <i>\r\n              <xsl:value-of select=\".\"/>\r\n            </i>\r\n          </xsl:for-each>\r\n        </arr>\r\n      </languages>\r\n    </xsl:if>\r\n    <!-- series -->\r\n    <series>\r\n      <xsl:if test=\"datafield[@tag=\'036E\']/subfield[@code=\'a\']\">\r\n        <arr>\r\n          <xsl:for-each select=\"datafield[@tag=\'036E\']\">\r\n            <i>\r\n              <xsl:for-each select=\"subfield\">\r\n                <xsl:choose>\r\n                  <xsl:when test=\"@code=\'a\'\">\r\n                    <xsl:value-of select=\".\"/>\r\n                  </xsl:when>\r\n                  <xsl:when test=\"@code=\'l\'\">\r\n                    <xsl:value-of select=\"concat(\' ; \',.)\"/>\r\n                  </xsl:when>\r\n                </xsl:choose> \r\n              </xsl:for-each>\r\n            </i>\r\n          </xsl:for-each>\r\n        </arr>\r\n      </xsl:if>\r\n	  <!-- hebis: added series statement for parts of multipart resources with independent title -->\r\n      <xsl:choose>\r\n        <xsl:when test=\"boolean(substring(datafield[@tag=\'002@\']/subfield[@code=\'0\'], 2, 1) != \'f\') and datafield[@tag=\'036C\']\">\r\n          <arr>\r\n            <i>\r\n              <xsl:value-of select=\"normalize-space(substring-after($title-036C, \'. \'))\"/>\r\n            </i>\r\n          </arr>\r\n        </xsl:when>\r\n      </xsl:choose>\r\n      </series>\r\n    <!-- physicalDescriptions -->\r\n    <xsl:if test=\"datafield[@tag=\'034D\' or @tag=\'034M\' or @tag=\'034I\' or @tag=\'034K\']\">\r\n      <xsl:variable name=\"phd\">\r\n        <xsl:value-of select=\"datafield[@tag=\'034D\']/subfield[@code=\'a\']\"/>\r\n      </xsl:variable>\r\n      <xsl:variable name=\"phm\">\r\n        <xsl:value-of select=\"datafield[@tag=\'034M\']/subfield[@code=\'a\']\"/>\r\n      </xsl:variable>\r\n      <xsl:variable name=\"phi\">\r\n        <xsl:value-of select=\"datafield[@tag=\'034I\']/subfield[@code=\'a\']\"/>\r\n      </xsl:variable>\r\n      <xsl:variable name=\"phk\">\r\n        <xsl:value-of select=\"datafield[@tag=\'034K\']/subfield[@code=\'a\']\"/>\r\n      </xsl:variable>\r\n      <physicalDescriptions>\r\n        <arr>\r\n          <i>\r\n            <xsl:choose>\r\n              <xsl:when test=\"$phd and string($phm) and string($phi) and string($phk)\">\r\n                <xsl:value-of select=\"concat($phd, \' : \', $phm, \' ; \', $phi, \' + \', $phk)\"/>\r\n              </xsl:when>\r\n              <xsl:when test=\"$phd and string($phm) and string($phi)\">\r\n                <xsl:value-of select=\"concat($phd, \' : \', $phm, \' ; \', $phi)\"/>\r\n              </xsl:when>\r\n              <xsl:when test=\"$phd and string($phm)\">\r\n                <xsl:value-of select=\"concat($phd, \' : \', $phm)\"/>\r\n              </xsl:when>\r\n              <xsl:otherwise>\r\n                <xsl:value-of select=\"$phd\"/>\r\n              </xsl:otherwise>\r\n            </xsl:choose>\r\n          </i>\r\n        </arr>\r\n      </physicalDescriptions>\r\n    </xsl:if>\r\n    <!-- Edition -->\r\n    <xsl:if test=\"datafield[@tag=\'032@\']/subfield[@code=\'a\']\">\r\n      <xsl:variable name=\"eda\" select=\"datafield[@tag=\'032@\']/subfield[@code=\'a\']\"/>\r\n      <xsl:variable name=\"edh\" select=\"datafield[@tag=\'032@\']/subfield[@code=\'h\']\"/>\r\n      <editions>\r\n        <arr>\r\n          <i>\r\n            <xsl:choose>\r\n              <xsl:when test=\"$edh\">\r\n                <xsl:value-of select=\"concat($eda, \' / \', $edh)\"/>\r\n              </xsl:when>\r\n              <xsl:otherwise>\r\n                <xsl:value-of select=\"$eda\"/>\r\n              </xsl:otherwise>\r\n            </xsl:choose>\r\n          </i>\r\n        </arr>\r\n      </editions>\r\n    </xsl:if>\r\n    <!-- Administrative notes -->\r\n    <xsl:if test=\"datafield[@tag=\'002@\']/subfield[@code=\'0\']\">\r\n      <xsl:variable name=\"bgs\" select=\"datafield[@tag=\'002@\']/subfield[@code=\'0\']\"/>\r\n      <administrativeNotes>\r\n        <arr>\r\n          <xsl:for-each select=\"datafield[@tag=\'002@\']/subfield[@code=\'0\']\">\r\n            <i>\r\n              <xsl:value-of select=\"concat($bgs, \' (K10plus 0500)\')\"/>\r\n            </i>\r\n          </xsl:for-each>\r\n        </arr>\r\n      </administrativeNotes>\r\n    </xsl:if>\r\n  </xsl:template>\r\n  <xsl:template match=\"text()\"/>\r\n  <xsl:template name=\"join\">\r\n    <xsl:param name=\"list\"/>\r\n    <xsl:param name=\"separator\"/>\r\n    <xsl:for-each select=\"$list\">\r\n      <xsl:value-of select=\".\"/>\r\n      <xsl:if test=\"position() != last()\">\r\n        <xsl:value-of select=\"$separator\"/>\r\n      </xsl:if>\r\n    </xsl:for-each>\r\n  </xsl:template>\r\n  <xsl:template name=\"pica-to-iso-date\">\r\n    <xsl:param name=\"input\"/>\r\n    <xsl:param name=\"suffix\"/>\r\n    <xsl:variable name=\"rawdate\" select=\"substring-after($input, \':\')\"/>\r\n    <xsl:variable name=\"day\" select=\"substring-before($rawdate, \'-\')\"/>\r\n    <xsl:variable name=\"moyr\" select=\"substring-after($rawdate, \'-\')\"/>\r\n    <xsl:variable name=\"month\" select=\"substring-before($moyr, \'-\')\"/>\r\n    <xsl:variable name=\"shortyear\" select=\"substring-after($moyr, \'-\')\"/>\r\n    <xsl:if test=\"$shortyear &gt; 50\">\r\n      <xsl:variable name=\"year\" select=\"concat(\'19\', $shortyear)\"/>\r\n      <xsl:value-of select=\"concat($year, \'-\', $month, \'-\', $day, $suffix)\"/>\r\n    </xsl:if>\r\n    <xsl:if test=\"$shortyear &lt; 51\">\r\n      <xsl:variable name=\"year\" select=\"concat(\'20\', $shortyear)\"/>\r\n      <xsl:value-of select=\"concat($year, \'-\', $month, \'-\', $day, $suffix)\"/>\r\n    </xsl:if>\r\n  </xsl:template>\r\n</xsl:stylesheet>\r\n',NULL,'xml','xml',NULL,NULL,NULL,NULL);
